{"version":3,"sources":["components/DropMenu.js","components/MenuButton.js","components/FooterBar.js","components/SampleData.js","components/DisplayDiagram.js","components/utils/SplitText.js","components/utils/PrintGoal.js","components/utils/PrintChild.js","components/utils/ChildUnderline.js","components/utils/PointAndName.js","components/utils/BranchName.js","components/utils/Branch.js","components/utils/LevelBranches.js","components/utils/PrintTitle.js","components/utils/Axis.js","components/ArrowButton.js","components/utils/GetOptimalFontSize.js","components/FontSlider.js","components/BuildDiagram.js","components/GetSample.js","images/bg-pattern.jpg","components/Home.js","components/ManualFormField.js","components/GetManualData.js","components/JsonFormField.js","components/JsonSample.js","components/PopUp.js","components/GetJsonData.js","App.js","index.js"],"names":["StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","backgroundColor","color","palette","common","white","MenuItem","CustomizedMenus","React","useState","anchorEl","setAnchorEl","handleClose","IconButton","edge","aria-label","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","ListItemText","primary","setPage","useStyles","makeStyles","flexGrow","height","display","flexDirection","justifyContent","alignItems","paddingLeft","ButtonAppBar","classes","AppBar","position","className","menuButton","marginRight","spacing","title","FooterBar","href","SampleData","DisplayDiagram","this","diagram","Component","splitWord","substring","spaceLeft","i","length","slice","SplitText","ctx","text","shiftWidth","text_height","words","split","word","wordLength","measureText","width","lines","newLine","push","longestWordLength","Math","max","map","element","maxLength","PrintGoal","xStart","xEnd","y","canvas","isRightDirection","canvasWidth","goalFontSize","goalColor","goal","goalText","getContext","lineWidth","font","fillStyle","textBaseline","textAlign","x","textHeight","round","textRows","y_Position","part","idx","fillText","goalSpace","PrintChild","childrenQty","child","shift","side","xRaw","yRaw","childFontSize","childColor","fontAdjustment","childText","textLength","ChildUnderline","yStart","textCred","lineColor","bottomUnderlines","lineLength","underline","beginPath","moveTo","lineTo","strokeStyle","stroke","getHypotenuse","a","b","sqrt","getCoordsFromHypoAngle","angleRadian","hypo","sin","cos","PointAndName","elements","yEnd","hypotenuse","abs","step","pos","childPosition","point","arc","PI","fill","BranchName","name","branchFontSize","branchColor","branchName","textName","textShift","getCoordsFromHeightAngle","leftMaxWidth","rightMaxWidth","spineLevel","tan","maxWidth","refinedHeight","Branch","totalBranches","branch","canvasHeight","axisLength","axisHeightPosition","leftEdge","topEdge","bottomEdge","branchElements","bone","firstBranchShiftIndex","startPoints","heightShift","endPoints","LevelBranches","branchObjects","elementsQty","qty","PrintTitle","titleFont","titleColor","titleText","Axis","branches","axis","clearRect","upperSideObjects","bottomSideObjects","pairsQty","ArrowDarkButton","toggleHandler","printCanvas","getSorted","sorted","arrowButtonStyle","useArrowDarkButtonStyles","sortingSymbol","Button","style","size","GetOptimalFontSize","xLargeScale","largeScale","middleScale","smallScale","branchesQty","ChangeFontSlider","thumb","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","FontSlider","state","handleChange","newValue","preventDefault","setState","getFontSize","getCurrentFont","prevProps","prevState","childOptimalFontSize","margin","valueLabelDisplay","value","onChange","min","Typography","gutterBottom","fontFamily","preferableCanvasHeight","window","screen","preferableCanvasWidth","BuildDiagram","currentValue","previousValue","originBranches","axisIdx","rightAngle","leftAngle","windowContent","document","getElementById","toDataURL","printWin","write","addEventListener","focus","print","close","getCredential","angleDegree","getRadianFromDegree","rightEdge","dir","arr","sort","object","newObj","getOriginBranches","data","getOptimalFontSize","goalOptimalFontSize","branchOptimalFontSize","obj","deg","settingData","displayDiagram","ArrowButton","GetSample","getData","Object","keys","key","mode","isCreating","buildCanvas","Home","buttons","formButtonStyle","variant","e","backgroundImage","imgUrl","backgroundSize","backgroundPosition","backgroundRepeat","maxHeight","minWidth","minHeight","padding","fontSize","fontWeight","ManualFormField","textInput","createRef","completeElementButton","inputField","submitButton","completeButton","getInput","completeElement","inputFor","addTitle","keyPress","addToText","TextField","autoFocus","inputRef","formInputStyle","label","onKeyDown","formButtonStyle1","current","formButtonStyle2","formButtonStyle3","GetManualData","target","getCreatedManually","alert","getBack","lastBranch","poppedElement","lastBranchElements","lastBranchElementsLength","nextInputFor","nextGoal","pop","bind","keyCode","console","log","manualCreationButton","formField","backButton","borderWidth","JsonFormField","multiline","rows","fullWidth","JsonSample","colon","comma","quotes","tab","PopUp","handleClick","getFormatSample","GetJsonData","errorMessage","warningMessage","isSampleOpened","safeJsonParse","str","JSON","parse","err","warningsQty","criticalWarnings","newArr","item","count","hasOwnProperty","checkedBranchesArr","result","message","checkedPropertyNames","checkPropertyNames","jsonFormatButtonStyle","marginBottom","App","page","pageName","toggleMenu","ReactDOM","render","StrictMode"],"mappings":"iUAQMA,EAAaC,YAAW,CAC1BC,MAAO,CACHC,OAAQ,sBAFGF,EAIhB,SAACG,GAAD,OACC,cAACC,EAAA,EAAD,aACIC,UAAW,EACXC,mBAAoB,KACpBC,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEZN,OAINQ,EAAiBX,aAAW,SAACY,GAAD,MAAY,CAC1CC,KAAM,CACF,UAAW,CACPC,gBAAiB,UACjB,sDAAuD,CACnDC,MAAOH,EAAMI,QAAQC,OAAOC,YALrBlB,CASnBmB,KAEW,SAASC,EAAgBjB,GAAQ,IAAD,EACXkB,IAAMC,SAAS,MADJ,mBACpCC,EADoC,KAC1BC,EAD0B,KAMrCC,EAAc,WAChBD,EAAY,OAGhB,OACI,gCACI,cAACE,EAAA,EAAD,CAAYC,KAAK,QAAQZ,MAAM,UAAUa,aAAW,OAAOC,QAT/C,SAACC,GACjBN,EAAYM,EAAMC,gBAQd,SACI,cAAC,IAAD,MAEJ,eAAChC,EAAD,CACIiC,GAAG,kBACHT,SAAUA,EACVU,aAAW,EACXC,KAAMC,QAAQZ,GACda,QAASX,EALb,UAOI,cAACd,EAAD,UACI,cAAC0B,EAAA,EAAD,CAAcC,QAAQ,mBAAmBT,QAAS,WAAQ1B,EAAMoC,QAAQ,QAASd,SAErF,cAACd,EAAD,UACI,cAAC0B,EAAA,EAAD,CAAcC,QAAQ,kBAAkBT,QAAS,WAAQ1B,EAAMoC,QAAQ,UAAWd,SAEtF,cAACd,EAAD,UACI,cAAC0B,EAAA,EAAD,CAAcC,QAAQ,gBAAgBT,QAAS,WAAQ1B,EAAMoC,QAAQ,QAASd,eC/DlG,IAAMe,EAAYC,aAAW,SAAC7B,GAAD,MAAY,CACrCC,KAAM,CACF6B,SAAU,EACV5B,gBAAiB,UACjB6B,OAAQ,MACRC,QAAS,OACTC,cAAe,MACfC,eAAgB,aAChBC,WAAY,SACZC,YAAa,WAIN,SAASC,EAAa9C,GACjC,IAAM+C,EAAUV,IAChB,OACI,cAACW,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAWH,EAAQrC,KAA7C,SACI,cAACO,EAAD,CAAiBmB,QAASpC,EAAMoC,YCnB5C,IAAMC,EAAYC,aAAW,SAAC7B,GAAD,MAAY,CACrCC,KAAM,CACF6B,SAAU,EACV5B,gBAAiB,UACjB6B,OAAQ,MACRC,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,SACZhC,MAAO,sBAEXuC,WAAY,CACRC,YAAa3C,EAAM4C,QAAQ,IAE/BC,MAAO,CACHf,SAAU,OAIH,SAASgB,EAAUvD,GAC9B,IAAM+C,EAAUV,IAChB,OACI,sBAAKa,UAAWH,EAAQrC,KAAxB,wBACe,uBAAMwC,UAAU,cAAhB,iBAAoC,mBAAGA,UAAU,cAAcM,KAAK,wCAAhC,mCAApC,UADf,yB,aCmCOC,EA5DI,CACf,kBAAmB,CACf,CACI,OAAU,CACN,sBACA,mBACA,gBACA,0BAGR,CACI,OAAU,CACN,eACA,sBACA,uBACA,qBAIR,CACI,YAAe,CACX,yBACA,qBACA,yBACA,iBAGR,CACI,QAAW,CACP,wBACA,qBACA,2BACA,gBACA,cAIR,CACI,YAAe,CACX,oBACA,gBACA,kBACA,iBACA,eACA,eAGR,CACI,UAAa,CACT,gBACA,mBACA,cACA,qBACA,0BCnDKC,E,uKAGb,OACI,8BAEKC,KAAK3D,MAAM4D,c,GANgBC,a,QCoBtCC,EAAY,SAACC,EAAWC,GAC1B,IAAK,IAAIC,EAAIF,EAAUG,OAAQD,GAAK,EAAGA,IACnC,GAAIF,EAAUI,MAAM,EAAGF,GAAGC,OAASF,EAC/B,MAAO,CAAC,GAAD,OAAID,EAAUI,MAAM,EAAGF,EAAI,GAA3B,KAAkCF,EAAUI,MAAMF,EAAI,KAK1DG,EA9BG,SAACC,EAAKC,EAAMC,EAAYC,GAOtC,IAJA,IAAIC,EAAQH,EAAKI,MAAM,KACnBC,EAAOF,EAAM,GACbG,EAAaP,EAAIQ,YAAYF,GAAMG,MACnCC,EAAQH,EAA0B,GAAbL,EAAmBT,EAAUa,EAAMJ,GAAc,CAACI,GAClEV,EAAI,EAAGA,EAAIQ,EAAMP,OAAQD,IAAK,CAGnC,GAFAU,EAAOF,EAAMR,GACDI,EAAIQ,YAAYE,EAAMA,EAAMb,OAAS,GAAK,IAAMS,GAAMG,MACtDN,EAAcD,EACtBQ,EAAMA,EAAMb,OAAS,IAAM,IAAMS,MAC9B,CAEH,IAAIK,GADJJ,EAAaP,EAAIQ,YAAYF,GAAMG,OACK,GAAbP,EAAmBT,EAAUa,EAAMJ,GAAc,CAACI,GAC7EI,EAAME,KAAN,MAAAF,EAAK,YAASC,KAGtB,IAAIE,EAAoBC,KAAKC,IAAL,MAAAD,KAAI,YAAQJ,EAAMM,KAAI,SAAAC,GAAO,OAAIjB,EAAIQ,YAAYS,GAASR,WAClF,MAAO,CAAER,KAAMS,EAAOQ,UAAWL,GAAkC,GAAbX,EAAmBW,EAAiC,GAAbX,ICIlFiB,EArBG,SAACxF,EAAOyF,EAAQC,EAAMC,GAAM,IAElCC,EAAyE5F,EAAzE4F,OAAQC,EAAiE7F,EAAjE6F,iBAAkBC,EAA+C9F,EAA/C8F,YAAaC,EAAkC/F,EAAlC+F,aAAcC,EAAoBhG,EAApBgG,UAAWC,EAASjG,EAATiG,KACpEC,EAAWN,EAAOO,WAAW,MACjCD,EAASE,UAAY,EACrBF,EAASG,KAAT,UAAmBN,EAAnB,gBACAG,EAASI,UAAYN,EACrBE,EAASK,aAAe,UACxBL,EAASM,UAAYX,EAAmB,QAAU,MAClD,IAAIY,EAAIZ,EAAmBH,EAAO,EAAID,EAAS,EAC3CiB,EAAavB,KAAKwB,MAAMT,EAASrB,YAAY,KAAKC,OAElDR,EAAOF,EAAU8B,EAAUD,EADfJ,EAAmBC,EAAcJ,EAAOgB,EAAajB,EAASiB,EAC9BA,GAAYpC,KACxDsC,EAAWtC,EAAKJ,OAEhB2C,EAAalB,EAAIR,KAAKwB,MAAOC,EAAWF,EAAc,GAI1D,OAHApC,EAAKe,KAAI,SAACyB,EAAMC,GAAP,OAAeb,EAASc,SAC7BF,EAAML,EAAGI,EAAaH,EAAcK,MAEjC,CAAEE,UAAWL,EAAWF,EAAa,ICmBjCQ,EAtCI,SAAClH,EAAOmH,EAAaC,EAAOC,EAAOC,EAAMC,EAAMC,GAAS,IAE/D5B,EAAwD5F,EAAxD4F,OAAQC,EAAgD7F,EAAhD6F,iBAAkB4B,EAA8BzH,EAA9ByH,cAAeC,EAAe1H,EAAf0H,WAC7CC,EAAiB,EACjBR,EAAc,GACdQ,EAAiB,IACVR,EAAc,GACrBQ,EAAiB,IACVR,EAAc,IACrBQ,EAAiB,IAErB,IAAItB,EAAOoB,EAAgBE,EACvBC,EAAYhC,EAAOO,WAAW,MAClCyB,EAAUvB,KAAV,UAAoBA,EAApB,gBACAuB,EAAUtB,UAAYoB,EACtBE,EAAUrB,aAAe,SACzBqB,EAAUpB,UAAYX,EAAmB,QAAU,MACnD,IAAIa,EAAakB,EAAU/C,YAAY,KAAKC,MACxC2B,EAAIZ,EACK,eAATyB,EAAwBC,EAAoB,GAAbb,EAAmBa,EAAoB,GAAbb,EAC9C,eAATY,EAAwBC,EAAoB,GAAbb,EAAmBa,EAAoB,GAAbb,EAC/DkB,EAAUxB,UAAY,GACtB,IAAI9B,EAAOF,EAAUwD,EAAWR,EAAOC,EAAOX,GAC1CE,EAAWtC,EAAKA,KAAKJ,OAYzB,OAXI2B,EACAvB,EAAKA,KAAKe,KAAI,SAACyB,EAAMC,GAAP,OAAea,EAAUZ,SACnCF,EAAe,eAATQ,EAAwBnC,KAAKwB,MAAMF,GAAKG,EAAWG,EAAM,GAAKL,EAAa,IAAOvB,KAAKwB,MAAMF,GAAKG,EAAWG,EAAM,GAAKL,EAAa,IAC3IvB,KAAKwB,MAAMa,GAAQT,EAAM,EAAIH,GAAYF,OAG7CpC,EAAKA,KAAKe,KAAI,SAACyB,EAAMC,GAAP,OAAea,EAAUZ,SACnCF,EAAe,cAATQ,EAAuBnC,KAAKwB,MAAMF,GAAKG,EAAWG,EAAM,GAAKL,EAAa,IAAOvB,KAAKwB,MAAMF,GAAKG,EAAWG,EAAM,GAAKL,EAAa,IAC1IvB,KAAKwB,MAAMa,GAAQT,EAAM,EAAIH,GAAYF,OAG1C,CAAEmB,WAAYvD,EAAKiB,UAAWmB,WAAYA,ICvBtCoB,EAdQ,SAAC9H,EAAOsH,EAAMD,EAAO5B,EAAQsC,EAAQC,GAAa,IAE7DpC,EAAwC5F,EAAxC4F,OAAQC,EAAgC7F,EAAhC6F,iBAAkBoC,EAAcjI,EAAdiI,UAC9BC,EAAmB/C,KAAKwB,MAAMqB,EAASH,WAAmC,GAAtBG,EAAStB,YAC7DyB,EAAsB,eAATb,EAAwBY,EAAmB/C,KAAKwB,MAAc,GAARU,GAAea,EAAmB/C,KAAKwB,MAAc,GAARU,GAAeW,EAASH,WACxIO,EAAYxC,EAAOO,WAAW,MAClCiC,EAAUC,YACVD,EAAUE,OAAOzC,EAAmBV,KAAKwB,MAAMlB,EAAS4B,EAAQ,IAAMlC,KAAKwB,MAAMlB,EAAS4B,EAAQ,IAAKU,GACvGK,EAAUG,OAAO1C,EAAmBV,KAAKwB,MAAMlB,EAAS0C,GAAchD,KAAKwB,MAAMlB,EAAS0C,GAAaJ,GACvGK,EAAUhC,UAAY,GACtBgC,EAAUI,YAAcP,EACxBG,EAAUK,UCcRC,EAAgB,SAACC,EAAGC,GACtB,OAAQzD,KAAK0D,KAAMF,EAAIA,EAAMC,EAAIA,IAG/BE,EAAyB,SAACjD,EAAkBkD,EAAnB,EAAwCC,EAAM1B,GAAU,IAC/E9E,EAAQsC,EADsE,mBAAtB2B,EAAsB,KAAnBd,EAAmB,KASlF,OAPIE,GACArD,EAASwG,EAAO7D,KAAK8D,IAAIF,GACzBjE,EAAQkE,EAAO7D,KAAK+D,IAAIH,KAExBvG,EAASwG,EAAO7D,KAAK8D,IAAI,QAAUF,GACnCjE,EAAQkE,EAAO7D,KAAK+D,IAAI,QAAUH,IAE/B,CAAC5D,KAAKwB,MAAMF,EAAI3B,GAAiB,cAATwC,EAAuBnC,KAAKwB,MAAMhB,EAAInD,GAAU2C,KAAKwB,MAAMhB,EAAInD,KAGnF2G,EArCM,SAACnJ,EAAOqH,EAAO+B,EAAUrC,EAAKtB,EAAQC,EAAMqC,EAAQsB,EAAM/B,EAAML,GAMjF,IAN+F,IAEvFrB,EAAqD5F,EAArD4F,OAAQC,EAA6C7F,EAA7C6F,iBAAkBkD,EAA2B/I,EAA3B+I,YAAad,EAAcjI,EAAdiI,UAC3Cd,EAAciC,EAASlF,OACvBoF,EAAaZ,EAAcvD,KAAKoE,IAAI7D,EAAOD,GAASN,KAAKoE,IAAIF,EAAOtB,IACpEyB,EAAe,IAARzC,GAAauC,EAAarC,IAAcE,EAAc,GAAKmC,GAAcnC,EAAc,GACzFsC,EAAM,EAAGA,GAAOtC,EAAasC,IAAO,CAEzC,IACMC,EAAgBZ,EAAuBjD,EAAkBkD,EAAa,CAACtD,EAAQsC,GAD7D,IAARhB,EAAYE,EAAYuC,EAAOC,EAAMD,EAAOC,EAC6CnC,GAHhE,cAI1BoC,EAJ0B,GAIlCjD,EAJkC,KAI/Bd,EAJ+B,KAKrCgE,EAAQ/D,EAAOO,WAAW,MAC9BwD,EAAMtB,YACNsB,EAAMC,IAAInD,EAAGd,EAAG,EAAG,EAAG,EAAIR,KAAK0E,IAAI,GACnCF,EAAMrD,UAAY2B,EAClB0B,EAAMG,OACN,IAAI9B,EAAWd,EAAWlH,EAAOmH,EAAaiC,EAASK,EAAM,GAAIpC,EAAOC,EAAMb,EAAGd,EAAI,IACrFmC,EAAe9H,EAAOsH,EAAMD,EAAOZ,EAAGd,EAAI,GAAKqC,KCRxC+B,EAbI,SAAC/J,EAAOgK,EAAM1C,EAAM5B,EAAM2D,GAAU,IAC3CzD,EAA0D5F,EAA1D4F,OAAQqE,EAAkDjK,EAAlDiK,eAAgBC,EAAkClK,EAAlCkK,YAAarE,EAAqB7F,EAArB6F,iBACzCsE,EAAaH,EACbI,EAAWxE,EAAOO,WAAW,MAC7BkE,EAAYlF,KAAKwB,MAAMyD,EAASvF,YAAYsF,GAAYrF,MAAQ,GACpEsF,EAAShE,UAAY,EACrBgE,EAAS/D,KAAT,UAAmB4D,EAAnB,gBACAG,EAAS9D,UAAY4D,EACrBE,EAAS5D,UAAYX,EAAmB,QAAU,MAClDuE,EAAS7D,aAAwB,cAATe,EAAuB,SAAW,UAC1D8C,EAASpD,SAASmD,EAAYtE,EAAmBH,EAAO2E,EAAY3E,EAAO2E,EAAoB,cAAT/C,EAAuB+B,EAAO,EAAIA,EAAO,IC8B7HiB,EAA2B,SAACzE,EAAkBkD,EAAnB,EAAwCvG,EAAQ+H,EAAcC,EAAeC,GAAgB,IAAD,mBAA3DhE,EAA2D,KAAxDd,EAAwD,KAEzH,GAAIE,EAAkB,CAClB,IAAIf,EAAQK,KAAKwB,MAAMnE,EAAS2C,KAAKuF,IAAI3B,IACrC4B,EAAWJ,EACf,GAAII,EAAW7F,EAAO,CAClB,IAAI8F,EAAgBzF,KAAKwB,MAAMgE,EAAWxF,KAAKuF,IAAI3B,IACnD,MAAO,CAACtC,EAAIkE,EAAW,GAAoB,cAAfF,EAA6B9E,EAAIiF,EAAgB,GAAMjF,EAAIiF,EAAgB,IAE3G,MAAO,CAACnE,EAAI3B,EAAQ,GAAoB,cAAf2F,EAA6B9E,EAAInD,EAAS,GAAMmD,EAAInD,EAAS,IAEtF,IAAIsC,EAAQK,KAAKwB,MAAMxB,KAAKoE,IAAI/G,EAAS2C,KAAKuF,IAAI,QAAU3B,KACxD4B,EAAWH,EACf,GAAIG,EAAW7F,EAAO,CAClB,IAAI8F,EAAgBzF,KAAKwB,MAAMxB,KAAKoE,IAAIoB,EAAWxF,KAAKuF,IAAI,QAAU3B,KACtE,MAAO,CAACtC,EAAIkE,EAAW,GAAoB,cAAfF,EAA6B9E,EAAIiF,EAAgB,GAAMjF,EAAIiF,EAAgB,IAE3G,MAAO,CAACnE,EAAI3B,EAAQ,GAAoB,cAAf2F,EAA6B9E,EAAInD,EAAS,GAAMmD,EAAInD,EAAS,KAI/EqI,EA1DA,SAAC7K,EAAO8K,EAAeC,EAAQhE,EAAKM,EAAOC,EAAML,GAAc,IAElErB,EAA+J5F,EAA/J4F,OAAQE,EAAuJ9F,EAAvJ8F,YAAakF,EAA0IhL,EAA1IgL,aAAcnF,EAA4H7F,EAA5H6F,iBAAkBoF,EAA0GjL,EAA1GiL,WAAYC,EAA8FlL,EAA9FkL,mBAAoBC,EAA0EnL,EAA1EmL,SAAUC,EAAgEpL,EAAhEoL,QAASC,EAAuDrL,EAAvDqL,WAAYtC,EAA2C/I,EAA3C+I,YAAad,EAA8BjI,EAA9BiI,UAAWgC,EAAmBjK,EAAnBiK,eAChJE,EAAaY,EAAOf,KACpBsB,EAAiBP,EAAO3B,SACxBmC,EAAO3F,EAAOO,WAAW,MAC7BoF,EAAKlF,KAAO4D,EACZsB,EAAKjF,UAAY2B,EAEjB,IASIzF,EATAgJ,EAAwBV,EAAgB,GAAK,GAAMA,EAAgB,EAAI,GAAMA,EAAgB,EAAI,GAAMA,EAAgB,EAAI,GAAM,EACjIrF,EAASI,EACTV,KAAKwB,MAAMwE,EAAWF,EAAc5D,EAAQN,EAAOM,EAAQmE,GAAyB,GACpFrG,KAAKwB,MAAMwE,EAAY9D,EAAQN,EAAOM,EAAQmE,GAAyB,GACvEzD,EAASmD,EACTO,EAAc,CAAChG,EAAQsC,GAEvBrB,EAAa6E,EAAK1G,YAAY,KAAKC,MAGvC,GAAIgG,EAAgB,GAAI,CACpB,IAAIY,EAAc3E,EAAM,IAAM,EAAIL,EAAa,EAC/ClE,EAAkB,cAAT8E,EAAuB4D,EAAqBE,EAAU,GAAMM,EAAcV,EAAeK,EAAaH,EAAqB,GAAMQ,OAE1IlJ,EAAkB,cAAT8E,EAAuB4D,EAAqBE,EAAU,GAAMJ,EAAeK,EAAaH,EAAqB,GAE1H,IAEIS,EAAYrB,EAAyBzE,EAAkBkD,EAAa0C,EAAajJ,EAFlEiD,EAAS,GACRK,EAAcL,EAAS,GAC+E6B,GA3BhD,cA4BvDqE,EA5BuD,GA4BrEjG,EA5BqE,KA4B/D2D,EA5B+D,KA6B1EkC,EAAKlD,YACLkD,EAAKjD,OAAO7C,EAAQsC,GACpBwD,EAAKhD,OAAO7C,EAAM2D,GAClBkC,EAAKnF,UAAY,GACjBmF,EAAK9C,SACLU,EAAanJ,EAAOqH,EAAOiE,EAAgBvE,EAAKtB,EAAQC,EAAMqC,EAAQsB,EAAM/B,EAAML,GAClF8C,EAAW/J,EAAOmK,EAAY7C,EAAM5B,EAAM2D,IC1B/BuC,EAVO,SAAC5L,EAAO8K,EAAee,EAAeC,EAAaxE,EAAML,GAK3E,IALyF,IAEjFgE,EAAejL,EAAfiL,WACJc,EAAMjB,EAAgB,EAAIgB,EAAc,EAAIA,EAC1CzE,EAAQlC,KAAKwB,MAAMsE,EAAcc,GAC9B9H,EAAI,EAAGA,EAAI4H,EAAc3H,OAAQD,IACtC4G,EAAO7K,EAAO8K,EAAee,EAAc5H,GAAIA,EAAI,EAAGoD,EAAOC,EAAML,ICK5D+E,EAZI,SAAChM,GAAW,IACnBsD,EAAwEtD,EAAxEsD,MAAOsC,EAAiE5F,EAAjE4F,OAAQE,EAAyD9F,EAAzD8F,YAAaD,EAA4C7F,EAA5C6F,iBAAkBoG,EAA0BjM,EAA1BiM,UAAWC,EAAelM,EAAfkM,WAC7DC,EAAYvG,EAAOO,WAAW,MAClCgG,EAAU/F,UAAY,IACtB+F,EAAU9F,KAAO4F,EACjBE,EAAU7F,UAAY4F,EACtBC,EAAU5F,aAAe,UACzB4F,EAAU3F,UAAYX,EAAmB,MAAQ,QACjD,IAAIY,EAAIZ,EAAmBC,EAAc,GAAK,GAC9CqG,EAAUnF,SAAS1D,EAAOmD,EAAG,KC2BlB2F,EAjCF,SAACpM,GAAU,IAEZ4F,EAAgG5F,EAAhG4F,OAAQK,EAAwFjG,EAAxFiG,KAAMkF,EAAkFnL,EAAlFmL,SAAUD,EAAwElL,EAAxEkL,mBAAoBD,EAAoDjL,EAApDiL,WAAYnF,EAAwC9F,EAAxC8F,YAAakF,EAA2BhL,EAA3BgL,aAAcqB,EAAarM,EAAbqM,SACvFC,EAAO1G,EAAOO,WAAW,MAE7B,GADAmG,EAAKC,UAAU,EAAG,EAAGzG,EAAakF,GAC9B/E,EAAM,CACNqG,EAAKjE,YACLiE,EAAKhE,OAAO6C,EAAUD,GACtBoB,EAAK/D,OAAO4C,EAAWF,EAAYC,GACnCoB,EAAKlG,UAAY,EACjBkG,EAAK9D,YAAc,UACnB8D,EAAK7D,SACL,IAAIxB,EAAYzB,EAAUxF,EAAOmL,EAAUA,EAAWF,EAAYC,GAAqBjE,UAEvF,GADA+E,EAAWhM,GACPqM,GAAYA,EAASnI,OAAS,EAAG,CAGjC,IAFA,IAAIsI,EAAmB,GACnBC,EAAoB,GACf1F,EAAM,EAAGA,EAAMsF,EAASnI,OAAQ6C,IACjCA,EAAM,EACN0F,EAAkBxH,KAAKoH,EAAStF,IAEhCyF,EAAiBvH,KAAKoH,EAAStF,IAGvC,IAAI2F,EAAWvH,KAAKC,IAAIoH,EAAiBtI,OAAQuI,EAAkBvI,QAGnE0H,EAAc5L,EAAOqM,EAASnI,OAAQsI,EAAkBE,EAFxC,YAE6DzF,GAC7E2E,EAAc5L,EAAOqM,EAASnI,OAAQuI,EAAmBC,EAFxC,aAE8DzF,M,oGCmB5E0F,GA1CS,SAAC3M,GAAW,IACxBqM,EAAgGrM,EAAhGqM,SAAUxG,EAAsF7F,EAAtF6F,iBAAkB+G,EAAoE5M,EAApE4M,cAAeC,EAAqD7M,EAArD6M,YAAaC,EAAwC9M,EAAxC8M,UAAWC,EAA6B/M,EAA7B+M,OAAQC,EAAqBhN,EAArBgN,iBAC7EjK,EAAUkK,oCAAyB,CACrCvM,KAAM,CACFC,gBAAiB,aAKrBuM,EAA2B,aAAXH,EAAwB,UAAuB,YAAXA,EAAuB,SAAW,WAC1F,OACI,sBAAK7J,UAAU,cAAf,UACI,cAACiK,EAAA,EAAD,CACIpK,QAASA,EACTrB,QAASmL,EACTjM,MAAM,UACNwM,MAAOJ,EAJX,SAMI,cAAC,KAAD,MAEJ,cAACG,EAAA,EAAD,CACIpK,QAASA,EACTrB,QAASkL,EACThM,MAAM,UACNwM,MAAOJ,EAJX,SAMKnH,EAAmB,cAAC,IAAD,IAAwB,cAAC,IAAD,MAEhD,cAACsH,EAAA,EAAD,CACIpK,QAASA,EACTrB,QAAS,WAAQoL,EAAUI,EAAeb,IAC1CzL,MAAM,UACNyM,KAAK,QACLD,MAAOJ,EALX,SAOgB,aAAXD,EAAwB,cAAC,KAAD,IAAiC,YAAXA,EAAuB,cAAC,IAAD,IAAwB,cCO/FO,GAnDY,SAACtN,GAExB,IAAMuN,EACa,EADbA,EAEc,GAFdA,EAGY,GAEZC,EACa,EADbA,EAEc,GAFdA,EAGY,GAEZC,EACa,GADbA,EAEc,GAFdA,EAGY,GAEZC,EACa,GADbA,EAEc,GAFdA,EAGY,GAGdC,EAAc3N,EAAMkE,OACxB,OAAIyJ,EAAc,GACP,CACH5H,aAAcwH,EACdtD,eAAgBsD,EAChB9F,cAAe8F,GAEZI,EAAc,EACd,CACH5H,aAAcyH,EACdvD,eAAgBuD,EAChB/F,cAAe+F,GAEZG,EAAc,EACd,CACH5H,aAAc0H,EACdxD,eAAgBwD,EAChBhG,cAAegG,GAGZ,CACH1H,aAAc2H,EACdzD,eAAgByD,EAChBjG,cAAeiG,I,mBC7BrBE,GAAmB/N,YAAW,CAChCa,KAAM,CACFE,MAAO,UACP4B,OAAQ,GAEZqL,MAAO,CACHrL,OAAQ,GACRsC,MAAO,GACPnE,gBAAiB,OACjBZ,OAAQ,yBACR+N,WAAY,EACZC,YAAa,GACb,6BAA8B,CAC1BC,UAAW,YAGnBC,OAAQ,GACRC,WAAY,CACRC,KAAM,oBAEVC,MAAO,CACH5L,OAAQ,EACR6L,aAAc,EACd1N,gBAAiB,WAErB2N,KAAM,CACF9L,OAAQ,EACR6L,aAAc,EACd1N,gBAAiB,YA5BAd,CA8BtB0O,MAEGC,G,4MACFC,MAAQ,CACJpI,KAAM,G,EAEVqI,aAAe,SAAC/M,EAAOgN,GACnBhN,EAAMiN,iBACN,EAAKC,SAAS,CAAExI,KAAMsI,IACtB,EAAK3O,MAAM8O,YAAYH,I,EAE3BI,eAAiB,SAAC1I,GACd,EAAKwI,SAAS,CACVxI,KAAMA,K,iEAGK2I,EAAWC,GACtBD,EAAUE,uBAAyBvL,KAAK3D,MAAMkP,sBAC9CvL,KAAKoL,eAAepL,KAAK3D,MAAMkP,wB,+BAG7B,IACEnM,EAAYY,KAAK3D,MAAjB+C,QACR,OACI,sBAAKG,UAAWH,EAAQrC,KAAxB,UACI,qBAAKwC,UAAWH,EAAQoM,SACxB,cAACvB,GAAD,CACIwB,kBAAkB,OAClBC,MAAO1L,KAAK8K,MAAMpI,KAClBiJ,SAAU3L,KAAK+K,aACfa,IAAK,EACLnK,IAAK,GACLoE,KAAM,KAEV,cAACgG,GAAA,EAAD,CAAYC,cAAY,EAAxB,8B,GAhCS5L,aAqCVhE,gBAjFA,SAAAY,GAAK,MAAK,CACrBC,KAAM,CACFoE,MAAO,GAAwB,EAAnBrE,EAAM4C,QAAQ,GAC1BzC,MAAO,UACP4F,UAAW,SACXkJ,WAAY,8BAEhBP,OAAQ,CACJ3M,OAAQ/B,EAAM4C,QAAQ,OAyEfxD,CAAmB2O,IC/E5BmB,GAAgD,GAAvBC,OAAOC,OAAOrN,OACvCsN,GAAwB3K,KAAKwB,MAA+B,OAAzBgJ,IAEpBI,G,4MACjBtB,MAAQ,CACJnL,MAAO,GACP2C,KAAM,GACN+J,aAAc,GACdC,cAAe,GACf5D,SAAU,GACV6D,eAAgB,GAChBnD,OAAQ,WACRjH,YAAagK,GACb9E,aAAc2E,GACdQ,QAAS,IACTC,WAAY,GACZC,UAAW,IACXxK,kBAAkB,EAClBqG,WAAY,UACZjE,UAAW,gBACXP,WAAY,WACZwC,YAAa,UACblE,UAAW,UACXiG,UAAW,wBACXxE,cAAe,GACfwC,eAAgB,GAChBlE,aAAc,I,EAGlB8G,YAAc,WACV,IACIyD,EAAgB,kBACpBA,GAAiB,SACjBA,GAAiB,2CACjBA,GAAiB,SACjBA,GAAiB,aALDC,SAASC,eAAe,YAAYC,YAKV,KAC1CH,GAAiB,UACjBA,GAAiB,UACjB,IAAMI,EAAWd,OAAO7N,KAAK,GAAI,GAAhB,kCACjB2O,EAASH,SAASxO,OAClB2O,EAASH,SAASI,MAAML,GACxBI,EAASH,SAASK,iBAAiB,QAAQ,WACvCF,EAASG,QACTH,EAASI,QACTJ,EAASH,SAASQ,QAClBL,EAASK,WACV,I,EAGPC,cAAgB,WAAO,IAAD,EACsE,EAAKvC,MAArF2B,EADU,EACVA,WAAYC,EADF,EACEA,UAAWvK,EADb,EACaA,YAAakF,EAD1B,EAC0BA,aAAcmF,EADxC,EACwCA,QACtDvK,GAFc,EACiDC,iBACtD0K,SAASC,eAAe,aACjCS,EAAc,EAAKxC,MAAM5I,iBAAmBuK,EAAaC,EACzDtH,EAAc,EAAKmI,oBAAoBD,GACvC/F,EAAqB/F,KAAKwB,MAAMqE,EAAe,GAAK,GACpDC,EAAa9F,KAAKwB,MAAMb,EAAcqK,GAAW,GACjDhF,EAA8BhG,KAAKwB,OAAOb,EAAcmF,GAAc,GAEtEkG,EAA+BhM,KAAKwB,OAAOb,EAAcmF,GAAc,GAEvEG,EAAUjG,KAAKwB,MAAqB,IAAfqE,GACrBK,EAAalG,KAAKwB,MAAqB,IAAfqE,GAE5B,EAAK6D,SAAS,CACVjJ,SACAmD,cACAmC,qBACAD,aACAE,WACAC,UACA+F,YACA9F,gB,EAIRyD,YAAc,SAACzB,GACX,EAAKwB,SAAS,CACVpH,cAAe4F,EACfpD,eAAgBoD,EAAO,EACvBtH,aAAcsH,EAAO,K,EAI7BT,cAAgB,WACZ,EAAKiC,UAAS,SAAAJ,GAAK,MAAK,CAAE5I,kBAAmB4I,EAAM5I,sB,EAOvDiH,UAAY,SAACsE,EAAKC,GACF,WAARD,EACA,EAAKvC,SAAS,CACVxC,SAAUgF,EAAIC,MAAK,SAAC3I,EAAGC,GAAJ,OAAUD,EAAES,SAASlF,OAAS0E,EAAEQ,SAASlF,UAC5D6I,OAAQqE,IAEG,YAARA,EAEP,EAAKvC,SAAS,CACVxC,SAAUgF,EAAIC,MAAK,SAAC3I,EAAGC,GAAJ,OAAUA,EAAEQ,SAASlF,OAASyE,EAAES,SAASlF,UAC5D6I,OAAQqE,IAEG,aAARA,GACP,EAAKvC,SAAS,CACVxC,SAAU,EAAKoC,MAAMyB,eAAe7K,KAAI,SAAAkM,GACpC,IAAIC,EAAS,GAGb,OAFAA,EAAM,KAAWD,EAAOvH,KACxBwH,EAAM,SAAeD,EAAOnI,SACrBoI,KAEXzE,OAAQqE,K,EAKpBK,kBAAoB,SAACC,GACjB,EAAK7C,SAAS,CACVqB,eAAgBwB,EAAKrM,KAAI,SAAAkM,GACrB,IAAIC,EAAS,GAGb,OAFAA,EAAM,KAAWD,EAAOvH,KACxBwH,EAAM,SAAeD,EAAOnI,SACrBoI,Q,EAyBnBG,mBAAqB,SAACN,GAClB,GAAIA,EAAK,CAAC,IAAD,EACmD/D,GAAmB+D,GAAnEtL,EADH,EACGA,aAAckE,EADjB,EACiBA,eAAgBxC,EADjC,EACiCA,cACtC,EAAKoH,SAAS,CACV9I,aAAcA,EACd6L,oBAAqB7L,EACrBkE,eAAgBA,EAChB4H,sBAAuB5H,EACvBxC,cAAeA,EACfyH,qBAAsBzH,M,kEApE9B9D,KAAKqN,kB,kCAuCGc,GACRnO,KAAKkL,SAAS,CACV5I,KAAM6L,EAAI7L,KACVoG,SAAUyF,EAAIzF,SAAShH,KAAI,SAAAkM,GACvB,IAAIC,EAAS,GAGb,OAFAA,EAAM,KAAWD,EAAOvH,KACxBwH,EAAM,SAAeD,EAAOnI,SACrBoI,KAEXlO,MAAOwO,EAAIxO,MACX0M,aAAc8B,EAAI9B,aAClBC,cAAe6B,EAAI7B,kB,0CAIP8B,GAGhB,OADkBA,GAAO5M,KAAK0E,GAAK,O,yCAiBpBmF,EAAWC,GAAY,IAAD,EACYtL,KAAK3D,MAA9CqM,EAD6B,EAC7BA,SAAUpG,EADmB,EACnBA,KAAM3C,EADa,EACbA,MAAO2M,EADM,EACNA,cAC3BhK,IAAS+I,EAAU/I,MACnB3C,IAAU2L,EAAU3L,OACpB+I,IAAa2C,EAAU3C,UACvB4D,IAAkBjB,EAAUiB,gBAE5BtM,KAAK8N,kBAAkB9N,KAAK3D,MAAMqM,UAClC1I,KAAKqO,YAAYrO,KAAK3D,OACtB2D,KAAKgO,mBAAmBhO,KAAK3D,MAAMqM,WAEnC1I,KAAK8K,MAAMpC,WAAa4C,EAAU5C,UAClC1I,KAAK8K,MAAMxI,OAASgJ,EAAUhJ,MAC9BtC,KAAK8K,MAAMnL,QAAU2L,EAAU3L,OAC/BK,KAAK8K,MAAM5I,mBAAqBoJ,EAAUpJ,kBAC1ClC,KAAK8K,MAAMhH,gBAAkBwH,EAAUxH,eACvC9D,KAAK8K,MAAM1B,SAAWkC,EAAUlC,QAChCpJ,KAAK8K,MAAMwB,gBAAkBhB,EAAUgB,eACvCtM,KAAK8K,MAAMhH,gBAAkBwH,EAAUxH,eAEvC2E,EAAKzI,KAAK8K,S,+BAIR,IAEFwD,EAFC,EACqEtO,KAAK8K,MAAvE3I,EADH,EACGA,YAAakF,EADhB,EACgBA,aAAcnF,EAD9B,EAC8BA,iBAAkBwG,EADhD,EACgDA,SAAUU,EAD1D,EAC0DA,OAO/D,OAJAkF,EACI,wBAAQ/O,UAAU,SAASrB,GAAG,WAAWiD,MAAOgB,EAAatD,OAAQwI,IAIrE,sBAAK9H,UAAU,QAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAAC,EAAD,CAAgBU,QAASqO,MAE7B,sBAAK/O,UAAU,gBAAf,UACI,cAACgP,GAAD,CACItF,cAAejJ,KAAKiJ,cACpB/G,iBAAkBA,EAClBgH,YAAalJ,KAAKkJ,YAClBC,UAAWnJ,KAAKmJ,UAChBT,SAAUA,EACVU,OAAQA,EACRC,iBAAkBrJ,KAAK3D,MAAMgN,mBAGjC,cAAC,GAAD,CACIkC,qBAAsBvL,KAAK8K,MAAMS,qBACjCJ,YAAanL,KAAKmL,wB,GAhNAjL,aCNrBsO,G,4MACjB1D,MAAQ,CACJxI,KAAM,YACNoG,SAAU,GACV/I,MAAO,c,EAEX8O,QAAU,SAACpS,GACP,IAAIiG,EAAOoM,OAAOC,KAAKtS,GAAO,GAC1BqM,EAAWrM,EAAMiG,GAAMZ,KAAI,SAAAkM,GAC3B,IAAIgB,EAAMF,OAAOC,KAAKf,GAAQ,GAC1BC,EAAS,GAGb,OAFAA,EAAM,KAAWe,EACjBf,EAAM,SAAeD,EAAOgB,GACrBf,KAEX,EAAK3C,SAAS,CACV5I,KAAMA,EACNoG,SAAUA,EACV/I,MAAO,aACPkP,KAAM,SACNC,YAAY,K,kEAIhB9O,KAAKyO,QAAQ3O,K,+BAEP,IAAD,EAC6BE,KAAK8K,MAA/BnL,EADH,EACGA,MAAO2C,EADV,EACUA,KAAMoG,EADhB,EACgBA,SACjBqG,EAAc,cAAC,GAAD,CACdpP,MAAOA,EACP2C,KAAMA,EACNoG,SAAUA,EACVW,iBAAkBrJ,KAAK3D,MAAMgN,mBAEjC,OACI,cAAC,WAAD,UACK0F,Q,GApCsB7O,aCJxB,OAA0B,uCCMpB8O,G,uKACP,IAAD,OACDC,EACA,sBAAK1P,UAAU,eAAf,UACI,cAACiK,EAAA,EAAD,CACIC,MAAOyF,GACPC,QAAQ,OACRzF,KAAK,SACLzM,MAAM,UACNc,QAAS,SAACqR,GAAQ,EAAK/S,MAAMoC,QAAQ,WALzC,6BASA,cAAC+K,EAAA,EAAD,CACIC,MAAOyF,GACPC,QAAQ,OACRzF,KAAK,SACLzM,MAAM,UACNc,QAAS,WAAQ,EAAK1B,MAAMoC,QAAQ,SALxC,8BAWR,OACI,sBACIc,UAAU,OACVkK,MAAO,CACH4F,gBAAgB,OAAD,OAASC,GAAT,KACfC,eAAgB,QAChBC,mBAAoB,gBACpBC,iBAAkB,aAN1B,UASI,sBAAKlQ,UAAU,OAAf,UACI,8BACI,oDAEJ,sBAAKA,UAAU,WAAf,qEAC4D,uBAD5D,yQAOA,gEAEA,+BACI,gFACA,wFAEJ,qDAEH0P,EACD,qBAAK1P,UAAU,eAAf,SACI,cAAC,GAAD,CAAW8J,iBAAkBA,c,GAvDfnJ,aA8D9BgP,GAAkB,CAClBlI,SAAU,QACV0I,UAAW,QACXC,SAAU,QACVC,UAAW,OACXC,QAAS,MACTrE,OAAQ,MAERO,WAAY,6BACZ+D,SAAU,OACVC,WAAY,IACZ9S,MAAO,aACPD,gBAAiB,WAGfqM,GAAmB,CACrByG,SAAU,OACV9S,gBAAiB,UACjBC,MAAO,aACPb,OAAQ,Q,mBCnFS4T,G,kDACjB,WAAY3T,GAAQ,IAAD,8BACf,cAAMA,IACD4T,UAAY1S,IAAM2S,YAFR,E,qDAKT,IAGFC,EAAuBC,EAAYC,EAAcC,EAHhD,SAEwDtQ,KAAK3D,MAD1DsD,EADH,EACGA,MAAO+I,EADV,EACUA,SAAU2D,EADpB,EACoBA,aAAckE,EADlC,EACkCA,SAAUC,EAD5C,EAC4CA,gBAC7CC,EAFC,EAEDA,SAAU3B,EAFT,EAESA,WAAY4B,EAFrB,EAEqBA,SAAUlK,EAF/B,EAE+BA,WAAYmK,EAF3C,EAE2CA,SAE5CC,EAAyB,kBAAbH,EAA+B,SAAW,GAgE1D,OA9DI3B,IAAenP,GAAS8Q,IACxBL,EACI,qBAAK7Q,UAAU,OAAf,SACI,cAACsR,GAAA,EAAD,CACIC,WAAW,EACXC,SAAU/Q,KAAKiQ,UACfxG,MAAOuH,GACPC,MAAOR,EACP/E,MAAOW,EACP6E,UAAWP,EACXnF,OAAO,aAInB6E,EACI,qBAAK9Q,UAAU,OAAf,SACI,eAACiK,EAAA,EAAD,CACI2F,QAAQ,OACR1F,MAAO0H,GACPlU,MAAM,UACNc,QAAS,SAACqR,GAAQmB,EAASE,GAAW,EAAKR,UAAUmB,QAAQlE,SAJjE,UAKI,sBAAM3N,UAAU,YAAhB,SACKqR,IANT,WASI,sBAAMrR,UAAU,YAAhB,SACiB,eAAbkR,EACI,cACa,iBAAbA,EACI,aACa,kBAAbA,EAA+BjK,EACd,qBAAbiK,EAAkC,uBAAyB,eAMvF3B,GAAcpG,GAAYA,EAASnI,OAAS,GAAkB,kBAAbkQ,IACjDN,EACI,qBAAK5Q,UAAU,OAAf,SACI,cAACiK,EAAA,EAAD,CACIC,MAAO4H,GACPlC,QAAQ,OACRzF,KAAK,SACLzM,MAAM,UACNc,QAAS,WAAQyS,IAAmB,EAAKP,UAAUmB,QAAQlE,SAL/D,2BASRoD,EACI,qBAAK/Q,UAAU,OAAf,SACI,cAACiK,EAAA,EAAD,CACIC,MAAO6H,GACPnC,QAAQ,OACRzF,KAAK,SACLzM,MAAM,UACNc,QAAS,WAAQ2S,IAAY,EAAKT,UAAUmB,QAAQlE,SALxD,uCAYR,eAAC,WAAD,WACKkD,EACAC,EACAF,EACAG,S,GA/E4BpQ,aAoFzC8Q,GAAiB,CACjBhK,SAAU,QACV0I,UAAW,OACXC,SAAU,QACVC,UAAW,OACXC,QAAS,MACTrE,OAAQ,mBACRsE,SAAU,QAGVqB,GAAmB,CACnBnK,SAAU,QACV0I,UAAW,QACXC,SAAU,QACVC,UAAW,OACXC,QAAS,MACTrE,OAAQ,MACRO,WAAY,6BACZ+D,SAAU,OACVC,WAAY,IACZ/S,gBAAiB,UACjBC,MAAO,cAEPoU,GAAmB,CACnBrK,SAAU,QACV0I,UAAW,QACXC,SAAU,QACVC,UAAW,OACXC,QAAS,MACTrE,OAAQ,MACRO,WAAY,6BACZ+D,SAAU,OACVC,WAAY,IACZ/S,gBAAiB,UACjBC,MAAO,cAGPqU,GAAmB,CACnBtK,SAAU,QACV0I,UAAW,QACXC,SAAU,QACVC,UAAW,OACXC,QAAS,MACTrE,OAAQ,MACRO,WAAY,6BACZ+D,SAAU,OACVC,WAAY,IACZ/S,gBAAiB,UACjBC,MAAO,cClIUsU,G,kDACjB,WAAYlV,GAAQ,IAAD,8BACf,cAAMA,IAWVmU,gBAAkB,WACd,EAAKtF,SAAS,CAAEuF,SAAU,kBAbX,EAgBnBC,SAAW,WACP,EAAKxF,SAAS,CAAEuF,SAAU,sBAjBX,EAoBnB1F,aAAe,kBAAM,YAA4B,IAAfW,EAAc,EAAxB8F,OAAU9F,MAC9B,EAAKR,SAAS,CACVmB,aAAcX,MAtBH,EA0BnB+F,mBAAqB,WACjB,EAAKvG,UAAS,SAAAJ,GAAK,MAAK,CACpBnL,MAAO,GACP2C,KAAM,GACNoG,SAAU,GACVoG,YAAY,EACZ2B,SAAU,kBAhCC,EA2CnBF,SAAW,SAAAlK,GAAS,IAAD,EACoB,EAAKyE,MAAhCuB,EADO,EACPA,aAAc3D,EADP,EACOA,SACD,KAAjB2D,GAAgC,qBAAThG,EACvBqL,MAAM,6BAEO,eAATrL,EACA,EAAK6E,SAAS,CACV5I,KAAM+J,EACNA,aAAc,GACdoE,SAAU,iBAEE,iBAATpK,EACP,EAAK6E,UAAS,SAAAI,GAAS,MAAK,CACxB5C,SAAS,GAAD,mBAAM4C,EAAU5C,UAAhB,CAA0B,CAAErC,KAAMgG,EAAc5G,SAAU,MAClEe,WAAY6F,EACZoE,SAAU,gBACVpE,aAAc,OAEF,kBAAThG,GACPqC,EAASA,EAASnI,OAAS,GAAGkF,SAASnE,KAAK+K,GAC5C,EAAKnB,SAAS,CACVxC,SAAUA,EAAShH,KAAI,SAAAkM,GACnB,IAAIC,EAAS,GAGb,OAFAA,EAAM,KAAWD,EAAOvH,KACxBwH,EAAM,SAAeD,EAAOnI,SACrBoI,KAEXxB,aAAc,MAEF,qBAAThG,GACP,EAAK6E,UAAS,SAAAJ,GAAK,MAAK,CACpBnL,MAAO0M,EACPA,aAAc,GACdoE,SAAU,QA5EP,EAkFnBkB,QAAU,WAAO,IAGTC,EAAYC,EAAeC,EAAoBC,EAA0BC,EAHjE,EACyB,EAAKlH,MAAlCpC,EADI,EACJA,SAAU+H,EADN,EACMA,SACdwB,EAFQ,EACgB3P,KAGX,eAAbmO,EACA,EAAKvF,SAAS,CACVuF,SAAU,GACVpE,aAAc,GACdC,cAAe,GACfwC,YAAY,IAEK,iBAAb2B,GAA+B/H,EAASnI,OAAS,GAAmB,qBAAbkQ,EAC/D,EAAKvF,SAAS,CAAEuF,SAAU,mBAEtB/H,EAASnI,OAAS,GAElBwR,GADAD,EAAqBpJ,EAASA,EAASnI,OAAS,GAAGkF,UACLlF,QACf,GAC3BsR,EAAgBC,EAAmBC,EAA2B,GAC9DH,EAAalJ,EAASA,EAASnI,OAAS,GAAG8F,KAC3CyL,EAAmBI,MACnBF,EAAe,kBAEfH,EAAgBnJ,EAASA,EAASnI,OAAS,GAAG8F,KAC9CuL,EAAalJ,EAASA,EAASnI,OAAS,GAAG8F,KAC3CqC,EAASwJ,MACTF,EAAe,gBAEQ,IAApBtJ,EAASnI,QAEhBwR,GADAD,EAAqBpJ,EAASA,EAASnI,OAAS,GAAGkF,UACLlF,QACf,GAC3BsR,EAAgBC,EAAmBC,EAA2B,GAC9DH,EAAalJ,EAASA,EAASnI,OAAS,GAAG8F,KAC3CyL,EAAmBI,MACnBF,EAAe,kBAEfH,EAAgBnJ,EAASA,EAASnI,OAAS,GAAG8F,KAC9CuL,EAAa,GACblJ,EAASwJ,MACTF,EAAe,gBAEQ,IAApBtJ,EAASnI,SAChB0R,EAAW,GACXD,EAAe,cAEnB,EAAK9G,SAAS,CACV5I,KAAM2P,EACNvJ,SAAUA,EACV2D,aAAc,GACd7F,WAAYoL,EACZnB,SAAUuB,EACV1F,cAAeuF,MApIvB,EAAK/G,MAAQ,CACT2F,SAAU,GACVpE,aAAc,GACdC,cAAe,GACfwC,YAAY,EACZpG,SAAU,IAEd,EAAKiI,SAAW,EAAKA,SAASwB,KAAd,iBATD,E,qDAoCV/C,GACa,KAAdA,EAAEgD,UACFC,QAAQC,IAAI,QAASlD,EAAEoC,OAAO9F,OAC9B1L,KAAKuQ,SAASvQ,KAAK8K,MAAM2F,a,+BAoGvB,IAGF8B,EAAsBC,EAAWzD,EAAa0D,EAH7C,SAEyCzS,KAAK8K,MAD3CnL,EADH,EACGA,MAAO2C,EADV,EACUA,KAAMoG,EADhB,EACgBA,SAAU2D,EAD1B,EAC0BA,aAAcoE,EADxC,EACwCA,SACzC3B,EAFC,EAEDA,WAAYtI,EAFX,EAEWA,WAAY8F,EAFvB,EAEuBA,cAoD5B,OAlDKmE,IACD8B,EACI,qBAAKhT,UAAU,OAAf,SACI,cAACiK,EAAA,EAAD,CACI2F,QAAQ,OACR1F,MAAOyF,GACPjS,MAAM,UACNc,QAAS,WAAQ,EAAK0T,sBAJ1B,4BAYZ1C,EAAc,cAAC,GAAD,CACVpP,MAAOA,EACP2C,KAAMA,EACNoG,SAAUA,EACV4D,cAAeA,EACfjD,iBAAkBA,KAGlByF,GAAc2B,IACdgC,EACI,qBAAKlT,UAAU,OAAf,SACI,cAACiK,EAAA,EAAD,CACI2F,QAAQ,OACR1F,MAAOyF,GACPjS,MAAM,UACNc,QAAS,WAAQ,EAAK4T,WAJ1B,qBAWZa,EAAa,cAAC,GAAD,CACTlQ,KAAMA,EAAMoG,SAAUA,EACtB2D,aAAcA,EACdoE,SAAUA,EACV9Q,MAAOA,EACP4Q,SAAUvQ,KAAKuQ,SACfC,gBAAiBxQ,KAAKwQ,gBACtB1B,WAAYA,EACZ4B,SAAU1Q,KAAK0Q,SACflK,WAAYA,EACZmK,SAAU3Q,KAAK2Q,WAIf,sBACIpR,UAAU,SACVkK,MAAO,CACH4F,gBAAgB,OAAD,OAASC,GAAT,KACfC,eAAgB,QAChBC,mBAAoB,gBACpBC,iBAAkB,aAN1B,UASI,qBAAKlQ,UAAU,cAAf,SACI,sBAAKA,UAAU,sBAAsBoM,SAAU3L,KAAK+K,aAAa0F,GAAjE,UACKgC,EACAF,EACAC,OAIT,qBAAKjT,UAAU,mBAAf,SACKwP,W,GArNsB7O,aA4NvCgP,GAAkB,CAClBlI,SAAU,QACV0I,UAAW,QACXC,SAAU,QACVC,UAAW,OACXC,QAAS,MACTrE,OAAQ,MACRO,WAAY,6BACZ+D,SAAU,OACVC,WAAY,IACZ2C,YAAa,QACb1V,gBAAiB,UACjBC,MAAO,cAGLoM,GAAmB,CACrByG,SAAU,OACV9S,gBAAiB,UACjBC,MAAO,aACPb,OAAQ,QClPSuW,G,uKACP,IAEFvC,EADI/D,EAAiBrM,KAAK3D,MAAtBgQ,aAeR,OAbA+D,EACI,cAACS,GAAA,EAAD,CACIpH,MAAOuH,GACPC,MAAM,aACNvF,MAAOW,EACPuG,WAAS,EACTC,KAAM,GACN1D,QAAQ,WACR2B,WAAS,EACTgC,WAAS,EACTtH,OAAO,SAIX,cAAC,WAAD,UACK4E,Q,GAnB0BlQ,aAwBvC8Q,GAAiB,CACjBlB,SAAU,QC1BOiD,G,uKAEb,IAIIC,EAAQ,IACRC,EAAQ,IACRC,EAAS,IACTC,EAAM,oDACV,OACI,sBAAK5T,UAAU,cAAf,UACI,oBAAIkK,MAAO,CAAExM,MAAO,WAApB,yBACA,sBAAKsC,UAAU,QAAf,UAEI,mBAAGA,UAAU,gBAAb,SAA6B,sBAAMA,UAAU,6BAAhB,SAbjB,QAcZ,oBAAGA,UAAU,gBAAb,UAA8B4T,EAAI,sBAAM5T,UAAU,gCAAhB,SAAiD2T,IAAnF,OAAqG,sBAAM3T,UAAU,gCAAhB,SAAiD2T,IAAtJ,OAA0K,sBAAM3T,UAAU,gCAAhB,SAAiDyT,IAA3N,OAA8O,sBAAMzT,UAAU,gCAAhB,SAAiD2T,IAAc,sBAAM3T,UAAU,mBAAhB,uBAAmD,sBAAMA,UAAU,gCAAhB,SAAiD2T,IAAjZ,OAAqa,sBAAM3T,UAAU,gCAAhB,SAAiD0T,OACtd,oBAAG1T,UAAU,gBAAb,UAA8B4T,EAAI,sBAAM5T,UAAU,gCAAhB,SAAiD2T,IAAnF,QAAsG,sBAAM3T,UAAU,gCAAhB,SAAiD2T,IAAvJ,OAA2K,sBAAM3T,UAAU,gCAAhB,SAAiDyT,IAA5N,OAA+O,sBAAMzT,UAAU,gCAAhB,SAAiD2T,IAAc,sBAAM3T,UAAU,mBAAhB,wBAAoD,sBAAMA,UAAU,gCAAhB,SAAiD2T,IAAnZ,OAAua,sBAAM3T,UAAU,gCAAhB,SAAiD0T,OACxd,oBAAG1T,UAAU,gBAAb,UAA8B4T,EAAI,sBAAM5T,UAAU,gCAAhB,SAAiD2T,IAAnF,WAAyG,sBAAM3T,UAAU,gCAAhB,SAAiD2T,IAA1J,OAA8K,sBAAM3T,UAAU,gCAAhB,SAAiDyT,IAA/N,OAAkP,sBAAMzT,UAAU,8BAAhB,SAdtO,SAeZ,oBAAGA,UAAU,gBAAb,UAA8B4T,EAAKA,EAAI,sBAAM5T,UAAU,6BAAhB,SAjB3B,SAkBZ,oBAAGA,UAAU,gBAAb,UAA8B4T,EAAKA,EAAKA,EAAI,sBAAM5T,UAAU,gCAAhB,SAAiD2T,IAA7F,OAA+G,sBAAM3T,UAAU,gCAAhB,SAAiD2T,IAAhK,OAAoL,sBAAM3T,UAAU,gCAAhB,SAAiDyT,IAArO,OAAwP,sBAAMzT,UAAU,gCAAhB,SAAiD2T,IAAc,sBAAM3T,UAAU,mBAAhB,2BAAuD,sBAAMA,UAAU,gCAAhB,SAAiD2T,IAA/Z,OAAmb,sBAAM3T,UAAU,gCAAhB,SAAiD0T,OACpe,oBAAG1T,UAAU,gBAAb,UAA8B4T,EAAKA,EAAKA,EAAI,sBAAM5T,UAAU,gCAAhB,SAAiD2T,IAA7F,WAAmH,sBAAM3T,UAAU,gCAAhB,SAAiD2T,IAApK,OAAwL,sBAAM3T,UAAU,gCAAhB,SAAiDyT,IAAzO,OAA4P,sBAAMzT,UAAU,8BAAhB,SAjBhP,SAkBZ,oBAAGA,UAAU,gBAAb,UAA8B4T,EAAKA,EAAKA,EAAKA,EAAI,sBAAM5T,UAAU,gCAAhB,SAAiD2T,IAAc,sBAAM3T,UAAU,mBAAhB,4BAAwD,sBAAMA,UAAU,gCAAhB,SAAiD2T,IAAzN,OAA6O,sBAAM3T,UAAU,gCAAhB,SAAiD0T,OAC9R,oBAAG1T,UAAU,gBAAb,UAA8B4T,EAAKA,EAAKA,EAAKA,EAAI,sBAAM5T,UAAU,gCAAhB,SAAiD2T,IAAc,sBAAM3T,UAAU,mBAAhB,4BAAwD,sBAAMA,UAAU,gCAAhB,SAAiD2T,IAAzN,OAA6O,sBAAM3T,UAAU,gCAAhB,SAAiD0T,OAC9R,oBAAG1T,UAAU,gBAAb,UAA8B4T,EAAKA,EAAKA,EAAKA,EAAI,sBAAM5T,UAAU,gCAAhB,SAAiD2T,IAAc,sBAAM3T,UAAU,mBAAhB,4BAAwD,sBAAMA,UAAU,gCAAhB,SAAiD2T,OACzN,oBAAG3T,UAAU,gBAAb,UAA8B4T,EAAKA,EAAKA,EAAI,sBAAM5T,UAAU,8BAAhB,SApB/B,SAqBb,oBAAGA,UAAU,gBAAb,UAA8B4T,EAAKA,EAAI,sBAAM5T,UAAU,6BAAhB,SAvB1B,MAuBb,OAAqH,sBAAMA,UAAU,gCAAhB,SAAiD0T,OACtK,oBAAG1T,UAAU,gBAAb,UAA8B4T,EAAKA,EAAI,sBAAM5T,UAAU,6BAAhB,SAzB3B,SA0BZ,oBAAGA,UAAU,gBAAb,UAA8B4T,EAAKA,EAAKA,EAAI,sBAAM5T,UAAU,gCAAhB,SAAiD2T,IAA7F,OAA+G,sBAAM3T,UAAU,gCAAhB,SAAiD2T,IAAhK,OAAoL,sBAAM3T,UAAU,gCAAhB,SAAiDyT,IAArO,OAAwP,sBAAMzT,UAAU,gCAAhB,SAAiD2T,IAAc,sBAAM3T,UAAU,mBAAhB,2BAAuD,sBAAMA,UAAU,gCAAhB,SAAiD2T,IAA/Z,OAAmb,sBAAM3T,UAAU,gCAAhB,SAAiD0T,OACpe,oBAAG1T,UAAU,gBAAb,UAA8B4T,EAAKA,EAAKA,EAAI,sBAAM5T,UAAU,gCAAhB,SAAiD2T,IAA7F,WAAmH,sBAAM3T,UAAU,gCAAhB,SAAiD2T,IAApK,OAAwL,sBAAM3T,UAAU,gCAAhB,SAAiDyT,IAAzO,OAA4P,sBAAMzT,UAAU,8BAAhB,SAzBhP,SA0BZ,oBAAGA,UAAU,gBAAb,UAA8B4T,EAAKA,EAAKA,EAAKA,EAAI,sBAAM5T,UAAU,gCAAhB,SAAiD2T,IAAc,sBAAM3T,UAAU,mBAAhB,4BAAwD,sBAAMA,UAAU,gCAAhB,SAAiD2T,IAAzN,OAA6O,sBAAM3T,UAAU,gCAAhB,SAAiD0T,OAC9R,oBAAG1T,UAAU,gBAAb,UAA8B4T,EAAKA,EAAKA,EAAKA,EAAI,sBAAM5T,UAAU,gCAAhB,SAAiD2T,IAAc,sBAAM3T,UAAU,mBAAhB,4BAAwD,sBAAMA,UAAU,gCAAhB,SAAiD2T,OACzN,oBAAG3T,UAAU,gBAAb,UAA8B4T,EAAKA,EAAKA,EAAI,sBAAM5T,UAAU,8BAAhB,SA3B/B,SA4Bb,oBAAGA,UAAU,gBAAb,UAA8B4T,EAAKA,EAAI,sBAAM5T,UAAU,6BAAhB,SA9B1B,SA+Bb,oBAAGA,UAAU,gBAAb,UAA8B4T,EAAI,sBAAM5T,UAAU,8BAAhB,SA7BrB,SA8Bb,mBAAGA,UAAU,gBAAb,SAA6B,sBAAMA,UAAU,6BAAhB,SAhChB,kB,GAHOW,aCEnBkT,G,4MACjBC,YAAc,WACV,EAAKhX,MAAMiX,mB,uDAGX,OACI,qBAAK/T,UAAU,QAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,sBAAMA,UAAU,QAAQxB,QAASiC,KAAKqT,YAAtC,sBACA,cAAC,GAAD,a,GATenT,aCGdqT,G,4MACjBzI,MAAQ,CACJuB,aAAc,GACd/J,KAAM,GACN3C,MAAO,GACP+I,SAAU,GACV8K,aAAc,GACdC,eAAgB,GAChBC,gBAAgB,G,EAGpB3I,aAAe,kBAAM,YAA4B,IAAfW,EAAc,EAAxB8F,OAAU9F,MAC9B2G,QAAQC,IAAI5G,EAAO,OACnB,EAAKR,SAAS,CACVmB,aAAcX,M,EA8FtBiI,cAAgB,SAACC,GACb,IACI,MAAO,CAAC,KAAMC,KAAKC,MAAMF,IAC3B,MAAOG,GACL,MAAO,CAACA,K,EAIhBT,gBAAkB,WACd,EAAKpI,UAAS,SAAAJ,GAAK,MAAK,CACpB4I,gBAAiB5I,EAAM4I,oB,iEApGZvF,GAUf,IATA,IAAIsF,EAEA/F,EAAMS,EAAIzF,SAAWyF,EAAIzF,SAAW,GACpCpG,EAAO,GACP3C,EAAQ,GACR+I,EAAW,GACXsL,EAAc,EACdC,EAAmB,GACnBC,EAAS,GACJ5T,EAAI,EAAGA,EAAIoN,EAAInN,OAAQD,IAAK,CACjC,IAAI6T,EAAOzG,EAAIpN,GACX8T,EAAQ,EACPD,EAAKE,eAAe,UACrBL,IACAI,KAECD,EAAKE,eAAe,cACrBL,IACAI,KAEU,IAAVA,GACAF,EAAO5S,KAAK6S,GA2BpB,OAxBKhG,EAAIkG,eAAe,SAGpB1U,EAAQwO,EAAIxO,MAFZqU,IAIC7F,EAAIkG,eAAe,QAGpB/R,EAAO6L,EAAI7L,KAFX2R,EAAmB,kCAIlB9F,EAAIkG,eAAe,YAOpB3L,EAAWwL,EALPD,EADAA,EACmB,gDAEA,sCAKvBA,EACAR,EAAiBQ,EACVD,EAAc,IACrBP,EAAc,UA7CA,6CA6CA,aAAsBO,EAAtB,MAEX,CACHP,eAAgBA,EAChBa,mBAAoB5L,EACpB/I,MAAOA,EACP2C,KAAMA,K,kCAIFoJ,GACR,GAAKA,EAIE,CAAC,IAAD,EACmB1L,KAAK2T,cAAcjI,GADtC,mBACIqI,EADJ,KACSQ,EADT,KAEH,GAAIR,EACA/T,KAAKkL,SAAS,CACVsI,aAAa,yBAAD,OAA2BO,EAAIS,QAA/B,KACZlS,KAAM,GACNoG,SAAU,GACV/I,MAAO,SAER,CACH,IAAI8U,EAAuBzU,KAAK0U,mBAAmBH,GAC3Cd,EAAoDgB,EAApDhB,eAAgBnR,EAAoCmS,EAApCnS,KAAM3C,EAA8B8U,EAA9B9U,MAAO2U,EAAuBG,EAAvBH,mBACrCtU,KAAKkL,SAAS,CACVuI,eAAgBA,EAChBD,aAAc,GACdlR,KAAMA,EACNoG,SAAU4L,EAAmB5S,KAAI,SAAAkM,GAC7B,IAAIC,EAAS,GAGb,OAFAA,EAAM,KAAWD,EAAOvH,KACxBwH,EAAM,SAAeD,EAAOnI,SACrBoI,KAEXlO,MAAOA,UAzBfK,KAAKkL,SAAS,CACVsI,aAAc,O,yCA2CPnI,EAAWC,GACtBtL,KAAK8K,MAAMuB,eAAiBf,EAAUe,cACtCrM,KAAK8K,MAAMxI,OAASgJ,EAAUhJ,MAC9BtC,KAAK8K,MAAMnL,QAAU2L,EAAU3L,OAC/BK,KAAK8K,MAAM0I,eAAiBlI,EAAUkI,cAEtCxT,KAAKqO,YAAYrO,KAAK8K,MAAMuB,gB,+BAI1B,IAEFmG,EAAWlE,EAFV,SACyFtO,KAAK8K,MAA3FuB,EADH,EACGA,aAAc/J,EADjB,EACiBA,KAAM3C,EADvB,EACuBA,MAAO+I,EAD9B,EAC8BA,SAAU8K,EADxC,EACwCA,aAAcC,EADtD,EACsDA,eAAgBC,EADtE,EACsEA,eAc3E,OAZAlB,EAAa,cACT,GADS,CAETnG,aAAcA,IAEd/J,IACAgM,EAAiB,cAAC,GAAD,CACbhM,KAAMA,EACN3C,MAAOA,EACP+I,SAAUA,EACVW,iBAAkBA,MAItB,sBACI9J,UAAU,OACVkK,MAAO,CACH4F,gBAAgB,OAAD,OAASC,GAAT,KACfC,eAAgB,QAChBC,mBAAoB,gBACpBC,iBAAkB,UAN1B,UASI,sBAAKlQ,UAAU,YAAYoM,SAAU3L,KAAK+K,eAA1C,UACI,8BACI,cAACvB,EAAA,EAAD,CAAQ2F,QAAQ,YAAY1F,MAAOkL,GAAuB1X,MAAM,UAAUc,QAAS,WAAQ,EAAKuV,mBAAhG,SACKI,EAAiB,mBAAqB,sBAG/C,qBAAKnU,UAAU,kBAAf,SACKiT,OAGT,sBAAKjT,UAAU,iBAAf,UACKS,KAAK8K,MAAM4I,eAAiB,cAAC,GAAD,CAAOJ,gBAAiBtT,KAAKsT,kBAAsB,KAChF,sBAAK/T,UAAU,aAAf,UACKiU,EADL,OAGKC,KAEJnF,Y,GA7KoBpO,aAmLnCmJ,GAAmB,CACrByG,SAAU,OACV9S,gBAAiB,UACjBC,MAAO,aACPb,OAAQ,QAERuY,GAAwB,CACxB3X,gBAAiB,UACjB6S,QAAS,EACT1O,MAAO,OACPtC,OAAQ,OACR+V,aAAc,QACd7I,WAAY,6BACZ+D,SAAU,OACVC,WAAY,IACZ9S,MAAO,cCjMU4X,I,mNAEnB/J,MAAQ,CACNgK,KAAM,Q,EAGRrW,QAAU,SAACqW,GACT,EAAK5J,SAAS,CAAE4J,KAAMA,K,uDAGd,IAEJC,EADID,EAAS9U,KAAK8K,MAAdgK,KAUR,MARa,SAATA,EACFC,EAAW,cAAC,GAAD,CAAMtW,QAASuB,KAAKvB,UACb,WAATqW,EACTC,EAAW,cAAC,GAAD,IACO,SAATD,IACTC,EAAW,cAAC,GAAD,KAIX,sBAAKxV,UAAU,MAAf,UACE,cAACJ,EAAD,CAAc6V,WAAYhV,KAAKgV,WAC7BvW,QAASuB,KAAKvB,UAEhB,qBAAKc,UAAU,gBAAf,SACGwV,IAEH,cAACnV,EAAD,W,GA7ByBM,cCJjC+U,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFvI,SAASC,eAAe,W","file":"static/js/main.1d356899.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n        border: '1px solid #d3d4d5',\r\n    },\r\n})((props) => (\r\n    <Menu\r\n        elevation={0}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n        }}\r\n        {...props}\r\n    />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n        '&:focus': {\r\n            backgroundColor: \"#858281\",\r\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n                color: theme.palette.common.white,\r\n            },\r\n        },\r\n    },\r\n}))(MenuItem);\r\n\r\nexport default function CustomizedMenus(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClick}>\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <StyledMenu\r\n                id=\"customized-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <StyledMenuItem>\r\n                    <ListItemText primary=\"Fishbone Diagram\" onClick={() => { props.setPage(\"home\"); handleClose() }} />\r\n                </StyledMenuItem>\r\n                <StyledMenuItem>\r\n                    <ListItemText primary=\"Manual Creation\" onClick={() => { props.setPage(\"manual\"); handleClose() }} />\r\n                </StyledMenuItem>\r\n                <StyledMenuItem>\r\n                    <ListItemText primary=\"JSON creation\" onClick={() => { props.setPage(\"json\"); handleClose() }} />\r\n                </StyledMenuItem>\r\n            </StyledMenu>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CustomizedMenus from './DropMenu'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: \"#52504f\",\r\n        height: \"5vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n        paddingLeft: \"1vw\",\r\n    }\r\n}));\r\n\r\nexport default function ButtonAppBar(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\" className={classes.root}>\r\n            <CustomizedMenus setPage={props.setPage} />\r\n        </AppBar>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: \"#52504f\",\r\n        height: \"5vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        color: \"rgb(214, 202, 202)\"\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function FooterBar(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            Created by <span className=\"footer-span\">&nbsp;<a className=\"footer-span\" href=\"https://www.linkedin.com/in/yasenvit/\"> Vitaliy Yasenivskyy </a>&nbsp;</span> © 2020 New York\r\n        </div>\r\n    );\r\n}\r\n","const SampleData = {\r\n    \"Missed Deadline\": [\r\n        {\r\n            \"People\": [\r\n                \"Micro-managing boss\",\r\n                \"Absent secretary\",\r\n                \"Sick children\",\r\n                \"Lack of communication\"\r\n            ]\r\n        },\r\n        {\r\n            \"Method\": [\r\n                \"Bureaucratic\",\r\n                \"Poor prioritization\",\r\n                \"Unforeseen variables\",\r\n                \"Lack of planning\"\r\n            ]\r\n        },\r\n\r\n        {\r\n            \"Measurement\": [\r\n                \"Did not track progress\",\r\n                \"No short term goal\",\r\n                \"Lack of accountability\",\r\n                \"No timesheet\"\r\n            ]\r\n        },\r\n        {\r\n            \"Machine\": [\r\n                \"Coffee machine broken\",\r\n                \"Car wouldn't start\",\r\n                \"Poor internet connection\",\r\n                \"Slow computer\",\r\n                \"Old mouse\"\r\n\r\n            ]\r\n        },\r\n        {\r\n            \"Environment\": [\r\n                \"Fluorescent light\",\r\n                \"Small cubicle\",\r\n                \"Office too cold\",\r\n                \"Noisy coworker\",\r\n                \"No fresh air\",\r\n                \"No windows\"\r\n            ]\r\n        },\r\n        {\r\n            \"Materials\": [\r\n                \"Unstable desk\",\r\n                \"No printer paper\",\r\n                \"Out of pens\",\r\n                \"Squeaky desk chair\",\r\n                \"Uncomfortable chair\"\r\n            ]\r\n        },\r\n\r\n    ]\r\n};\r\n\r\nexport default SampleData;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayDiagram extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                {this.props.diagram}\r\n\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","const SplitText = (ctx, text, shiftWidth, text_height) => {\r\n    /* wraps the text that longer than max_width into multiple lines.\r\n  Returns text length and height  */\r\n    var words = text.split(\" \");\r\n    var word = words[0];\r\n    var wordLength = ctx.measureText(word).width;\r\n    let lines = wordLength > shiftWidth * 0.9 ? splitWord(word, shiftWidth) : [word];\r\n    for (var i = 1; i < words.length; i++) {\r\n        word = words[i];\r\n        var width = ctx.measureText(lines[lines.length - 1] + \" \" + word).width;\r\n        if (width + text_height < shiftWidth) {\r\n            lines[lines.length - 1] += \" \" + word;\r\n        } else {\r\n            wordLength = ctx.measureText(word).width;\r\n            let newLine = wordLength > shiftWidth * 0.9 ? splitWord(word, shiftWidth) : [word];\r\n            lines.push(...newLine);\r\n        };\r\n    };\r\n    let longestWordLength = Math.max(...lines.map(element => ctx.measureText(element).width));\r\n    return { text: lines, maxLength: longestWordLength <= shiftWidth * 0.9 ? longestWordLength : shiftWidth * 0.9 };\r\n};\r\n\r\nconst splitWord = (substring, spaceLeft) => {\r\n    for (let i = substring.length; i >= 0; i--) {\r\n        if (substring.slice(0, i).length < spaceLeft) {\r\n            return [`${substring.slice(0, i - 2)}-`, substring.slice(i - 2)];\r\n        };\r\n    };\r\n};\r\n\r\nexport default SplitText;\r\n","import SplitText from \"./SplitText\";\r\n\r\nconst PrintGoal = (props, xStart, xEnd, y) => {\r\n    /* printing main goal */\r\n    const { canvas, isRightDirection, canvasWidth, goalFontSize, goalColor, goal } = props;\r\n    let goalText = canvas.getContext('2d');\r\n    goalText.lineWidth = 2;\r\n    goalText.font = `${goalFontSize}pt Helvetica`;\r\n    goalText.fillStyle = goalColor;\r\n    goalText.textBaseline = \"hanging\";\r\n    goalText.textAlign = isRightDirection ? \"start\" : \"end\";\r\n    let x = isRightDirection ? xEnd + 5 : xStart - 5;\r\n    let textHeight = Math.round(goalText.measureText(\"M\").width);\r\n    let max_width = isRightDirection ? canvasWidth - xEnd - textHeight : xStart - textHeight;\r\n    let text = SplitText(goalText, goal, max_width, textHeight).text;\r\n    let textRows = text.length;\r\n    // finding y position (top) for goal text\r\n    let y_Position = y - Math.round((textRows * textHeight) / 2);\r\n    text.map((part, idx) => goalText.fillText(\r\n        part, x, y_Position + textHeight * (idx))\r\n    );\r\n    return { goalSpace: textRows * textHeight / 2 };\r\n};\r\nexport default PrintGoal;\r\n","import SplitText from './SplitText';\r\n\r\nconst PrintChild = (props, childrenQty, child, shift, side, xRaw, yRaw) => {\r\n    /* prints child name */\r\n    const { canvas, isRightDirection, childFontSize, childColor } = props;\r\n    let fontAdjustment = 1;\r\n    if (childrenQty > 14) {\r\n        fontAdjustment = 0.75;\r\n    } else if (childrenQty > 10) {\r\n        fontAdjustment = 0.85;\r\n    } else if (childrenQty > 6) {\r\n        fontAdjustment = 0.9;\r\n    };\r\n    let font = childFontSize * fontAdjustment;\r\n    let childText = canvas.getContext('2d');\r\n    childText.font = `${font}pt Helvetica`;\r\n    childText.fillStyle = childColor;\r\n    childText.textBaseline = \"bottom\";\r\n    childText.textAlign = isRightDirection ? \"start\" : \"end\";\r\n    let textHeight = childText.measureText(\"M\").width;\r\n    let x = isRightDirection ?\r\n        side === \"bottomSide\" ? xRaw + textHeight * 0.8 : xRaw + textHeight * 0.2\r\n        : side === \"bottomSide\" ? xRaw - textHeight * 0.8 : xRaw - textHeight * 0.2;\r\n    childText.lineWidth = 0.7;\r\n    let text = SplitText(childText, child, shift, textHeight);\r\n    let textRows = text.text.length;\r\n    if (isRightDirection) {\r\n        text.text.map((part, idx) => childText.fillText(\r\n            part, side === \"bottomSide\" ? Math.round(x + (textRows - idx - 1) * textHeight * 0.6) : Math.round(x - (textRows - idx - 1) * textHeight * 0.6),\r\n            Math.round(yRaw + (idx + 1 - textRows) * textHeight)\r\n        ));\r\n    } else {\r\n        text.text.map((part, idx) => childText.fillText(\r\n            part, side === \"upperSide\" ? Math.round(x + (textRows - idx - 1) * textHeight * 0.6) : Math.round(x - (textRows - idx - 1) * textHeight * 0.6),\r\n            Math.round(yRaw + (idx + 1 - textRows) * textHeight)\r\n        ));\r\n    };\r\n    return { textLength: text.maxLength, textHeight: textHeight };\r\n};\r\n\r\nexport default PrintChild;\r\n","const ChildUnderline = (props, side, shift, xStart, yStart, textCred) => {\r\n    /* builds line under child name*/\r\n    const { canvas, isRightDirection, lineColor } = props;\r\n    let bottomUnderlines = Math.round(textCred.textLength + textCred.textHeight * 0.6);\r\n    let lineLength = side === \"bottomSide\" ? bottomUnderlines < Math.round(shift * 0.9) ? bottomUnderlines : Math.round(shift * 0.9) : textCred.textLength;\r\n    let underline = canvas.getContext('2d');\r\n    underline.beginPath();\r\n    underline.moveTo(isRightDirection ? Math.round(xStart + shift / 40) : Math.round(xStart - shift / 40), yStart);\r\n    underline.lineTo(isRightDirection ? Math.round(xStart + lineLength) : Math.round(xStart - lineLength), yStart);\r\n    underline.lineWidth = 0.6;\r\n    underline.strokeStyle = lineColor;\r\n    underline.stroke();\r\n};\r\n\r\nexport default ChildUnderline;\r\n","\r\nimport PrintChild from './PrintChild';\r\nimport ChildUnderline from './ChildUnderline';\r\n\r\nconst PointAndName = (props, shift, elements, idx, xStart, xEnd, yStart, yEnd, side, goalSpace) => {\r\n    /* set points on given branch */\r\n    const { canvas, isRightDirection, angleRadian, lineColor } = props;\r\n    let childrenQty = elements.length;\r\n    let hypotenuse = getHypotenuse(Math.abs(xEnd - xStart), Math.abs(yEnd - yStart));\r\n    let step = idx === 1 ? (hypotenuse - goalSpace) / (childrenQty + 1) : hypotenuse / (childrenQty + 1);\r\n    for (let pos = 1; pos <= childrenQty; pos++) {\r\n        //if it's first branch - it will leave some space for goal text and start it's child shifted\r\n        let childHypo = idx === 1 ? goalSpace + step * pos : step * pos;\r\n        const childPosition = getCoordsFromHypoAngle(isRightDirection, angleRadian, [xStart, yStart], childHypo, side);\r\n        const [x, y] = childPosition;\r\n        let point = canvas.getContext('2d');\r\n        point.beginPath();\r\n        point.arc(x, y, 1, 0, 1 * Math.PI, true);\r\n        point.fillStyle = lineColor;\r\n        point.fill();\r\n        let textCred = PrintChild(props, childrenQty, elements[pos - 1], shift, side, x, y + 0.5);\r\n        ChildUnderline(props, side, shift, x, y + 0.5, textCred);\r\n    };\r\n};\r\n\r\nconst getHypotenuse = (a, b) => {\r\n    return (Math.sqrt((a * a) + (b * b)));\r\n}\r\n\r\nconst getCoordsFromHypoAngle = (isRightDirection, angleRadian, [x, y], hypo, side) => {\r\n    let height, width;\r\n    if (isRightDirection) {\r\n        height = hypo * Math.sin(angleRadian);\r\n        width = hypo * Math.cos(angleRadian);\r\n    } else {\r\n        height = hypo * Math.sin(3.14159 - angleRadian);\r\n        width = hypo * Math.cos(3.14159 - angleRadian);\r\n    };\r\n    return [Math.round(x - width), side === \"upperSide\" ? Math.round(y - height) : Math.round(y + height)];\r\n};\r\n\r\nexport default PointAndName;\r\n","const BranchName = (props, name, side, xEnd, yEnd) => {\r\n    const { canvas, branchFontSize, branchColor, isRightDirection } = props;\r\n    let branchName = name;\r\n    let textName = canvas.getContext('2d');\r\n    let textShift = Math.round(textName.measureText(branchName).width / 3);\r\n    textName.lineWidth = 2;\r\n    textName.font = `${branchFontSize}pt Helvetica`;\r\n    textName.fillStyle = branchColor;\r\n    textName.textAlign = isRightDirection ? \"start\" : \"end\";\r\n    textName.textBaseline = side === \"upperSide\" ? \"bottom\" : \"hanging\";\r\n    textName.fillText(branchName, isRightDirection ? xEnd - textShift : xEnd + textShift, side === \"upperSide\" ? yEnd - 5 : yEnd + 5);\r\n};\r\n\r\nexport default BranchName;\r\n","import PointAndName from './PointAndName';\r\nimport BranchName from './BranchName';\r\n\r\nconst Branch = (props, totalBranches, branch, idx, shift, side, goalSpace) => {\r\n    /* function builds vertical bone */\r\n    const { canvas, canvasWidth, canvasHeight, isRightDirection, axisLength, axisHeightPosition, leftEdge, topEdge, bottomEdge, angleRadian, lineColor, branchFontSize } = props;\r\n    let branchName = branch.name;\r\n    let branchElements = branch.elements;\r\n    let bone = canvas.getContext('2d');\r\n    bone.font = branchFontSize;\r\n    bone.fillStyle = lineColor;\r\n    // shifting first branch closer to goal depends how many branches total in order to give more space for branches\r\n    let firstBranchShiftIndex = totalBranches > 10 ? 0.8 : totalBranches > 8 ? 0.7 : totalBranches > 6 ? 0.6 : totalBranches > 4 ? 0.4 : 0;\r\n    let xStart = isRightDirection ?\r\n        Math.round(leftEdge + axisLength - (shift * idx) + shift * firstBranchShiftIndex) + 0.5 :  // changing length btw goal and first branch\r\n        Math.round(leftEdge + (shift * idx) - shift * firstBranchShiftIndex) + 0.5;                   // changing length btw goal and first branch\r\n    let yStart = axisHeightPosition;\r\n    let startPoints = [xStart, yStart];\r\n    // measure approx branchName height\r\n    let textHeight = bone.measureText(\"M\").width;\r\n    // if more than 10 branches, making even branches longer in order to fit\r\n    let height;\r\n    if (totalBranches > 10) {\r\n        let heightShift = idx % 2 === 0 ? textHeight : 0;\r\n        height = side === \"upperSide\" ? axisHeightPosition - topEdge + 0.5 + heightShift : canvasHeight - bottomEdge - axisHeightPosition + 0.5 + heightShift;\r\n    } else {\r\n        height = side === \"upperSide\" ? axisHeightPosition - topEdge + 0.5 : canvasHeight - bottomEdge - axisHeightPosition + 0.5;\r\n    };\r\n    let maxWidthLeft = xStart - 10;\r\n    let maxWidthRight = canvasWidth - xStart - 10;\r\n    let endPoints = getCoordsFromHeightAngle(isRightDirection, angleRadian, startPoints, height, maxWidthLeft, maxWidthRight, side);\r\n    let [xEnd, yEnd] = endPoints;\r\n    bone.beginPath();\r\n    bone.moveTo(xStart, yStart);\r\n    bone.lineTo(xEnd, yEnd);\r\n    bone.lineWidth = 0.8;\r\n    bone.stroke();\r\n    PointAndName(props, shift, branchElements, idx, xStart, xEnd, yStart, yEnd, side, goalSpace);\r\n    BranchName(props, branchName, side, xEnd, yEnd);\r\n};\r\nconst getCoordsFromHeightAngle = (isRightDirection, angleRadian, [x, y], height, leftMaxWidth, rightMaxWidth, spineLevel) => {\r\n    /* function gives coords of bone end */\r\n    if (isRightDirection) {\r\n        let width = Math.round(height / Math.tan(angleRadian));\r\n        let maxWidth = leftMaxWidth;\r\n        if (maxWidth < width) {\r\n            let refinedHeight = Math.round(maxWidth * Math.tan(angleRadian));\r\n            return [x - maxWidth + 0.5, spineLevel === \"upperSide\" ? y - refinedHeight + 0.5 : y + refinedHeight + 0.5];\r\n        };\r\n        return [x - width + 0.5, spineLevel === \"upperSide\" ? y - height + 0.5 : y + height + 0.5];\r\n    } else {\r\n        let width = Math.round(Math.abs(height / Math.tan(3.14159 - angleRadian)));\r\n        let maxWidth = rightMaxWidth;\r\n        if (maxWidth < width) {\r\n            let refinedHeight = Math.round(Math.abs(maxWidth * Math.tan(3.14159 - angleRadian)));\r\n            return [x + maxWidth + 0.5, spineLevel === \"upperSide\" ? y - refinedHeight + 0.5 : y + refinedHeight + 0.5];\r\n        };\r\n        return [x + width + 0.5, spineLevel === \"upperSide\" ? y - height + 0.5 : y + height + 0.5];\r\n    };\r\n};\r\n\r\nexport default Branch;\r\n","import Branch from './Branch';\r\n\r\nconst LevelBranches = (props, totalBranches, branchObjects, elementsQty, side, goalSpace) => {\r\n    /* function builds branch on upper or bottom side depends of flag \"side\" */\r\n    const { axisLength } = props;\r\n    let qty = totalBranches < 5 ? elementsQty + 1 : elementsQty;\r\n    const shift = Math.round(axisLength / (qty));\r\n    for (let i = 0; i < branchObjects.length; i++) {\r\n        Branch(props, totalBranches, branchObjects[i], i + 1, shift, side, goalSpace);\r\n    };\r\n};\r\n\r\nexport default LevelBranches;\r\n","\r\nconst PrintTitle = (props) => {\r\n    const { title, canvas, canvasWidth, isRightDirection, titleFont, titleColor } = props;\r\n    let titleText = canvas.getContext('2d');\r\n    titleText.lineWidth = 1.5;\r\n    titleText.font = titleFont;\r\n    titleText.fillStyle = titleColor;\r\n    titleText.textBaseline = \"hanging\";\r\n    titleText.textAlign = isRightDirection ? \"end\" : \"start\";\r\n    let x = isRightDirection ? canvasWidth - 20 : 20;\r\n    titleText.fillText(title, x, 20);\r\n};\r\n\r\nexport default PrintTitle;\r\n","import PrintGoal from './PrintGoal';\r\nimport LevelBranches from './LevelBranches';\r\nimport PrintTitle from './PrintTitle';\r\n\r\nconst Axis = (props) => {\r\n    /* function builds diagram axis */\r\n    const { canvas, goal, leftEdge, axisHeightPosition, axisLength, canvasWidth, canvasHeight, branches } = props;\r\n    let axis = canvas.getContext('2d');\r\n    axis.clearRect(0, 0, canvasWidth, canvasHeight);\r\n    if (goal) {\r\n        axis.beginPath();\r\n        axis.moveTo(leftEdge, axisHeightPosition);\r\n        axis.lineTo(leftEdge + axisLength, axisHeightPosition);\r\n        axis.lineWidth = 2;\r\n        axis.strokeStyle = '#333333';\r\n        axis.stroke();\r\n        let goalSpace = PrintGoal(props, leftEdge, leftEdge + axisLength, axisHeightPosition,).goalSpace;\r\n        PrintTitle(props);\r\n        if (branches && branches.length > 0) {\r\n            let upperSideObjects = [];\r\n            let bottomSideObjects = [];\r\n            for (let idx = 0; idx < branches.length; idx++) {\r\n                if (idx % 2) {\r\n                    bottomSideObjects.push(branches[idx]);\r\n                } else {\r\n                    upperSideObjects.push(branches[idx]);\r\n                };\r\n            };\r\n            let pairsQty = Math.max(upperSideObjects.length, bottomSideObjects.length);\r\n            let upperSide = \"upperSide\";\r\n            let bottomSide = \"bottomSide\";\r\n            LevelBranches(props, branches.length, upperSideObjects, pairsQty, upperSide, goalSpace);\r\n            LevelBranches(props, branches.length, bottomSideObjects, pairsQty, bottomSide, goalSpace);\r\n        };\r\n    };\r\n};\r\n\r\nexport default Axis;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\r\nimport { useArrowDarkButtonStyles } from '@mui-treasury/styles/button/arrowDark';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\nconst ArrowDarkButton = (props) => {\r\n    const { branches, isRightDirection, toggleHandler, printCanvas, getSorted, sorted, arrowButtonStyle } = props;\r\n    const classes = useArrowDarkButtonStyles({\r\n        root: {\r\n            backgroundColor: '#BDCDEF'\r\n        }\r\n    }\r\n    );\r\n\r\n    let sortingSymbol = sorted === \"unsorted\" ? \"descend\" : sorted === \"descend\" ? \"ascend\" : \"unsorted\";\r\n    return (\r\n        <div className=\"buttons-mui\">\r\n            <Button\r\n                classes={classes}\r\n                onClick={printCanvas}\r\n                color=\"primary\"\r\n                style={arrowButtonStyle}\r\n            >\r\n                <PrintIcon />\r\n            </Button>\r\n            <Button\r\n                classes={classes}\r\n                onClick={toggleHandler}\r\n                color=\"primary\"\r\n                style={arrowButtonStyle}\r\n            >\r\n                {isRightDirection ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </Button>\r\n            <Button\r\n                classes={classes}\r\n                onClick={() => { getSorted(sortingSymbol, branches) }}\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                style={arrowButtonStyle}\r\n            >\r\n                {sorted === \"unsorted\" ? <KeyboardArrowUp /> : sorted === \"descend\" ? <KeyboardArrowDown /> : \"reset\"}\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ArrowDarkButton;\r\n\r\n","const GetOptimalFontSize = (props) => {\r\n    //finding optimal font size\r\n    const xLargeScale = {\r\n        childFontSize: 8,\r\n        branchFontSize: 10,\r\n        goalFontSize: 12,\r\n    };\r\n    const largeScale = {\r\n        childFontSize: 9,\r\n        branchFontSize: 11,\r\n        goalFontSize: 13,\r\n    };\r\n    const middleScale = {\r\n        childFontSize: 10,\r\n        branchFontSize: 12,\r\n        goalFontSize: 14,\r\n    };\r\n    const smallScale = {\r\n        childFontSize: 11,\r\n        branchFontSize: 13,\r\n        goalFontSize: 15,\r\n    };\r\n\r\n    let branchesQty = props.length;\r\n    if (branchesQty > 16) {\r\n        return {\r\n            goalFontSize: xLargeScale.goalFontSize,\r\n            branchFontSize: xLargeScale.branchFontSize,\r\n            childFontSize: xLargeScale.childFontSize\r\n        };\r\n    } else if (branchesQty > 8) {\r\n        return {\r\n            goalFontSize: largeScale.goalFontSize,\r\n            branchFontSize: largeScale.branchFontSize,\r\n            childFontSize: largeScale.childFontSize\r\n        };\r\n    } else if (branchesQty > 6) {\r\n        return {\r\n            goalFontSize: middleScale.goalFontSize,\r\n            branchFontSize: middleScale.branchFontSize,\r\n            childFontSize: middleScale.childFontSize\r\n        };\r\n    } else {\r\n        return {\r\n            goalFontSize: smallScale.goalFontSize,\r\n            branchFontSize: smallScale.branchFontSize,\r\n            childFontSize: smallScale.childFontSize\r\n        };\r\n    };\r\n};\r\n\r\nexport default GetOptimalFontSize;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: 40 + theme.spacing(3) * 2,\r\n        color: '#333333',\r\n        textAlign: \"center\",\r\n        fontFamily: \"Computer Modern Typewriter\",\r\n    },\r\n    margin: {\r\n        height: theme.spacing(3),\r\n    },\r\n});\r\n\r\nconst ChangeFontSlider = withStyles({\r\n    root: {\r\n        color: \"#52504f\",\r\n        height: 8,\r\n    },\r\n    thumb: {\r\n        height: 24,\r\n        width: 24,\r\n        backgroundColor: '#fff',\r\n        border: '2px solid currentColor',\r\n        marginTop: -8,\r\n        marginLeft: -12,\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: 'inherit',\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n        backgroundColor: \"#52504f\"\r\n    },\r\n    rail: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n        backgroundColor: \"#52504f\"\r\n    },\r\n})(Slider);\r\n\r\nclass FontSlider extends Component {\r\n    state = {\r\n        font: 5\r\n    }\r\n    handleChange = (event, newValue) => {\r\n        event.preventDefault();\r\n        this.setState({ font: newValue });\r\n        this.props.getFontSize(newValue);\r\n    };\r\n    getCurrentFont = (font) => {\r\n        this.setState({\r\n            font: font\r\n        });\r\n    };\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.childOptimalFontSize !== this.props.childOptimalFontSize) {\r\n            this.getCurrentFont(this.props.childOptimalFontSize);\r\n        };\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className={classes.margin} />\r\n                <ChangeFontSlider\r\n                    valueLabelDisplay=\"auto\"\r\n                    value={this.state.font}\r\n                    onChange={this.handleChange}\r\n                    min={5}\r\n                    max={15}\r\n                    step={0.5}\r\n                />\r\n                <Typography gutterBottom>Font size</Typography>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withStyles(styles)(FontSlider);\r\n","import React, { Component } from 'react';\r\nimport DisplayDiagram from './DisplayDiagram';\r\nimport Axis from './utils/Axis';\r\nimport ArrowButton from './ArrowButton';\r\nimport GetOptimalFontSize from './utils/GetOptimalFontSize';\r\nimport FontSlider from './FontSlider';\r\n\r\nconst preferableCanvasHeight = window.screen.height * 0.8;\r\nconst preferableCanvasWidth = Math.round(preferableCanvasHeight * 1.4142);\r\n\r\nexport default class BuildDiagram extends Component {\r\n    state = {\r\n        title: \"\",\r\n        goal: \"\",\r\n        currentValue: \"\",\r\n        previousValue: \"\",\r\n        branches: [],\r\n        originBranches: [],\r\n        sorted: \"unsorted\",\r\n        canvasWidth: preferableCanvasWidth,\r\n        canvasHeight: preferableCanvasHeight,\r\n        axisIdx: 0.75,\r\n        rightAngle: 60,\r\n        leftAngle: 120,\r\n        isRightDirection: true,\r\n        titleColor: '#333333',\r\n        lineColor: \"rgb(17,33,54)\",\r\n        childColor: \" #A41404\",\r\n        branchColor: '#4A090D',\r\n        goalColor: \"#4A090D\",\r\n        titleFont: \"Italic 14pt Helvetica\",\r\n        childFontSize: \"\",\r\n        branchFontSize: \"\",\r\n        goalFontSize: \"\",\r\n    };\r\n\r\n    printCanvas = () => {\r\n        const dataUrl = document.getElementById('myCanvas').toDataURL();\r\n        let windowContent = '<!DOCTYPE html>';\r\n        windowContent += '<html>';\r\n        windowContent += '<head><title>Print canvas</title></head>';\r\n        windowContent += '<body>';\r\n        windowContent += '<img src=\"' + dataUrl + '\">';\r\n        windowContent += '</body>';\r\n        windowContent += '</html>';\r\n        const printWin = window.open('', '', `'width=''width=440,height=260'`);\r\n        printWin.document.open();\r\n        printWin.document.write(windowContent);\r\n        printWin.document.addEventListener('load', function () {\r\n            printWin.focus();\r\n            printWin.print();\r\n            printWin.document.close();\r\n            printWin.close();\r\n        }, true);\r\n    };\r\n\r\n    getCredential = () => {\r\n        const { rightAngle, leftAngle, canvasWidth, canvasHeight, axisIdx, isRightDirection } = this.state;\r\n        let canvas = document.getElementById(\"myCanvas\");\r\n        let angleDegree = this.state.isRightDirection ? rightAngle : leftAngle;\r\n        let angleRadian = this.getRadianFromDegree(angleDegree);\r\n        let axisHeightPosition = Math.round(canvasHeight / 2) + 0.5;\r\n        let axisLength = Math.round(canvasWidth * axisIdx) - 50;\r\n        let leftEdge = isRightDirection ? Math.round((canvasWidth - axisLength) / 2)\r\n            : Math.round((canvasWidth - axisLength) / 2);\r\n        let rightEdge = isRightDirection ? Math.round((canvasWidth - axisLength) / 2)\r\n            : Math.round((canvasWidth - axisLength) / 2);\r\n        let topEdge = Math.round(canvasHeight * 0.08);\r\n        let bottomEdge = Math.round(canvasHeight * 0.08);\r\n\r\n        this.setState({\r\n            canvas,\r\n            angleRadian,\r\n            axisHeightPosition,\r\n            axisLength,\r\n            leftEdge,\r\n            topEdge,\r\n            rightEdge,\r\n            bottomEdge\r\n        });\r\n    };\r\n\r\n    getFontSize = (size) => {\r\n        this.setState({\r\n            childFontSize: size,\r\n            branchFontSize: size + 2,\r\n            goalFontSize: size + 4\r\n        });\r\n    };\r\n\r\n    toggleHandler = () => {\r\n        this.setState(state => ({ isRightDirection: !state.isRightDirection }));\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getCredential();\r\n    };\r\n\r\n    getSorted = (dir, arr) => {\r\n        if (dir === \"ascend\") {\r\n            this.setState({\r\n                branches: arr.sort((a, b) => a.elements.length - b.elements.length),\r\n                sorted: dir\r\n            });\r\n        } else if (dir === \"descend\") {\r\n\r\n            this.setState({\r\n                branches: arr.sort((a, b) => b.elements.length - a.elements.length),\r\n                sorted: dir\r\n            });\r\n        } else if (dir === \"unsorted\") {\r\n            this.setState({\r\n                branches: this.state.originBranches.map(object => {\r\n                    let newObj = {};\r\n                    newObj[\"name\"] = object.name;\r\n                    newObj[\"elements\"] = object.elements;\r\n                    return newObj;\r\n                }),\r\n                sorted: dir\r\n            });\r\n        };\r\n    };\r\n\r\n    getOriginBranches = (data) => {\r\n        this.setState({\r\n            originBranches: data.map(object => {\r\n                let newObj = {};\r\n                newObj[\"name\"] = object.name;\r\n                newObj[\"elements\"] = object.elements;\r\n                return newObj;\r\n            })\r\n        });\r\n    };\r\n\r\n    settingData(obj) {\r\n        this.setState({\r\n            goal: obj.goal,\r\n            branches: obj.branches.map(object => {\r\n                let newObj = {};\r\n                newObj[\"name\"] = object.name;\r\n                newObj[\"elements\"] = object.elements;\r\n                return newObj;\r\n            }),\r\n            title: obj.title,\r\n            currentValue: obj.currentValue,\r\n            previousValue: obj.previousValue,\r\n        });\r\n    };\r\n\r\n    getRadianFromDegree(deg) {\r\n        /* finding radian from angle degree*/\r\n        let radianAngle = deg * (Math.PI / 180);\r\n        return radianAngle;\r\n    }\r\n    getOptimalFontSize = (arr) => {\r\n        if (arr) {\r\n            const { goalFontSize, branchFontSize, childFontSize } = GetOptimalFontSize(arr);\r\n            this.setState({\r\n                goalFontSize: goalFontSize,\r\n                goalOptimalFontSize: goalFontSize,\r\n                branchFontSize: branchFontSize,\r\n                branchOptimalFontSize: branchFontSize,\r\n                childFontSize: childFontSize,\r\n                childOptimalFontSize: childFontSize\r\n            });\r\n        };\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { branches, goal, title, previousValue } = this.props;\r\n        if (goal !== prevProps.goal ||\r\n            title !== prevState.title ||\r\n            branches !== prevProps.branches ||\r\n            previousValue !== prevProps.previousValue\r\n        ) {\r\n            this.getOriginBranches(this.props.branches)\r\n            this.settingData(this.props)\r\n            this.getOptimalFontSize(this.props.branches)\r\n        };\r\n        if (this.state.branches !== prevState.branches ||\r\n            this.state.goal !== prevState.goal ||\r\n            this.state.title !== prevState.title ||\r\n            this.state.isRightDirection !== prevState.isRightDirection ||\r\n            this.state.childFontSize !== prevState.childFontSize ||\r\n            this.state.sorted !== prevState.sorted ||\r\n            this.state.previousValue !== prevState.previousValue ||\r\n            this.state.childFontSize !== prevState.childFontSize\r\n        ) {\r\n            Axis(this.state)\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { canvasWidth, canvasHeight, isRightDirection, branches, sorted } = this.state;\r\n        let displayDiagram;\r\n\r\n        displayDiagram = (\r\n            <canvas className=\"canvas\" id=\"myCanvas\" width={canvasWidth} height={canvasHeight}></canvas>\r\n        );\r\n\r\n        return (\r\n            <div className=\"build\">\r\n                <div className=\"build-display\">\r\n                    <DisplayDiagram diagram={displayDiagram} />\r\n                </div>\r\n                <div className=\"build-buttons\">\r\n                    <ArrowButton\r\n                        toggleHandler={this.toggleHandler}\r\n                        isRightDirection={isRightDirection}\r\n                        printCanvas={this.printCanvas}\r\n                        getSorted={this.getSorted}\r\n                        branches={branches}\r\n                        sorted={sorted}\r\n                        arrowButtonStyle={this.props.arrowButtonStyle}\r\n\r\n                    />\r\n                    <FontSlider\r\n                        childOptimalFontSize={this.state.childOptimalFontSize}\r\n                        getFontSize={this.getFontSize}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport SampleData from './SampleData';\r\nimport BuildDiagram from './BuildDiagram';\r\n\r\nexport default class GetSample extends Component {\r\n    state = {\r\n        goal: \"your goal\",\r\n        branches: [],\r\n        title: \"your title\"\r\n    }\r\n    getData = (props) => {\r\n        let goal = Object.keys(props)[0];\r\n        let branches = props[goal].map(object => {\r\n            let key = Object.keys(object)[0];\r\n            let newObj = {};\r\n            newObj[\"name\"] = key;\r\n            newObj[\"elements\"] = object[key];\r\n            return newObj;\r\n        });\r\n        this.setState({\r\n            goal: goal,\r\n            branches: branches,\r\n            title: \"Created by\",\r\n            mode: \"sample\",\r\n            isCreating: false\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.getData(SampleData);\r\n    };\r\n    render() {\r\n        const { title, goal, branches } = this.state;\r\n        let buildCanvas = <BuildDiagram\r\n            title={title}\r\n            goal={goal}\r\n            branches={branches}\r\n            arrowButtonStyle={this.props.arrowButtonStyle}\r\n        />;\r\n        return (\r\n            <Fragment>\r\n                {buildCanvas}\r\n            </Fragment>\r\n        );\r\n    };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/bg-pattern.5e78345c.jpg\";","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport GetSample from './GetSample'\r\nimport imgUrl from '../images/bg-pattern.jpg';\r\n\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        let buttons = (\r\n            <div className=\"home-buttons\">\r\n                <Button\r\n                    style={formButtonStyle}\r\n                    variant=\"text\"\r\n                    size=\"medium\"\r\n                    color=\"primary\"\r\n                    onClick={(e) => { this.props.setPage(\"manual\") }}\r\n                >\r\n                    Create manually\r\n                </Button>\r\n                <Button\r\n                    style={formButtonStyle}\r\n                    variant=\"text\"\r\n                    size=\"medium\"\r\n                    color=\"primary\"\r\n                    onClick={() => { this.props.setPage(\"json\"); }}\r\n                >\r\n                    JSON Creation\r\n                </Button>\r\n            </div>\r\n        )\r\n        return (\r\n            <div\r\n                className=\"home\"\r\n                style={{\r\n                    backgroundImage: `url(${imgUrl})`,\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center center',\r\n                    backgroundRepeat: 'no-repeat',\r\n                }}>\r\n\r\n                <div className=\"text\">\r\n                    <div>\r\n                        <h3>FISHBONE DIAGRAM</h3>\r\n                    </div>\r\n                    <div className=\"text-box\">\r\n                        Also called: cause-and-effect diagram, Ishikawa diagram.<br></br>\r\n                        This cause analysis tool is considered one of the seven basic quality tools.\r\n                        The fishbone diagram identifies many possible causes for an effect or problem.\r\n                        It can be used to structure a brainstorming session.\r\n                        It immediately sorts ideas into useful categories.\r\n                    </div>\r\n                    <h4>WHEN TO USE A FISHBONE DIAGRAM</h4>\r\n\r\n                    <ul>\r\n                        <li>When identifying possible causes for a problem</li>\r\n                        <li>When a team’s thinking tends to fall into ruts</li>\r\n                    </ul>\r\n                    <h4>LETS GET STARTED</h4>\r\n                </div>\r\n                {buttons}\r\n                <div className=\"home-display\">\r\n                    <GetSample arrowButtonStyle={arrowButtonStyle} />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nvar formButtonStyle = {\r\n    maxWidth: '250px',\r\n    maxHeight: '150px',\r\n    minWidth: '250px',\r\n    minHeight: '40px',\r\n    padding: '0px',\r\n    margin: '2px',\r\n    // fontFamily: \"Computer Modern Bright\",\r\n    fontFamily: \"Computer Modern TypeWriter\",\r\n    fontSize: '16px',\r\n    fontWeight: 700,\r\n    color: 'whitesmoke',\r\n    backgroundColor: \"#5b6692\",\r\n};\r\n\r\nconst arrowButtonStyle = {\r\n    fontSize: \"10px\",\r\n    backgroundColor: '#5b6692',\r\n    color: 'whitesmoke',\r\n    border: \"none\"\r\n};\r\n","import React, { Component, Fragment } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default class ManualFormField extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.textInput = React.createRef();\r\n    };\r\n\r\n    render() {\r\n        const { title, branches, currentValue, getInput, completeElement,\r\n            inputFor, isCreating, addTitle, branchName, keyPress } = this.props;\r\n        let completeElementButton, inputField, submitButton, completeButton;\r\n        let addToText = inputFor === \"Enter Element\" ? \"add to\" : \"\";\r\n\r\n        if (isCreating && !title && inputFor) {\r\n            inputField = (\r\n                <div className=\"site\" >\r\n                    <TextField\r\n                        autoFocus={true}\r\n                        inputRef={this.textInput}\r\n                        style={formInputStyle}\r\n                        label={inputFor}\r\n                        value={currentValue}\r\n                        onKeyDown={keyPress}\r\n                        margin=\"normal\"\r\n                    />\r\n                </div>\r\n            );\r\n            submitButton = (\r\n                <div className=\"site\">\r\n                    <Button\r\n                        variant=\"text\"\r\n                        style={formButtonStyle1}\r\n                        color=\"primary\"\r\n                        onClick={(e) => { getInput(inputFor); this.textInput.current.focus(); }}>\r\n                        <span className='span-text'>\r\n                            {addToText}\r\n                        </span>\r\n                        &nbsp;&nbsp;\r\n                        <span className='main-text'>{\r\n                            inputFor === \"Enter Goal\" ?\r\n                                \"submit goal\" :\r\n                                inputFor === \"Enter Branch\" ?\r\n                                    \"add branch\" :\r\n                                    inputFor === \"Enter Element\" ? branchName :\r\n                                        inputFor === \"Title (optional)\" ? \"add title / complete\" : \"Goal\"}\r\n                        </span>\r\n                    </Button>\r\n                </div >)\r\n        }\r\n\r\n        if (isCreating && branches && branches.length > 0 && inputFor === \"Enter Element\") {\r\n            completeElementButton = (\r\n                <div className=\"site\">\r\n                    <Button\r\n                        style={formButtonStyle2}\r\n                        variant=\"text\"\r\n                        size=\"medium\"\r\n                        color=\"primary\"\r\n                        onClick={() => { completeElement(); this.textInput.current.focus(); }}>\r\n                        Next Branch\r\n                    </Button>\r\n                </div>);\r\n            completeButton = (\r\n                <div className=\"site\">\r\n                    <Button\r\n                        style={formButtonStyle3}\r\n                        variant=\"text\"\r\n                        size=\"medium\"\r\n                        color=\"primary\"\r\n                        onClick={() => { addTitle(); this.textInput.current.focus(); }}>\r\n                        add title and complete\r\n                            </Button>\r\n                </div>);\r\n        };\r\n\r\n        return (\r\n            <Fragment>\r\n                {inputField}\r\n                {submitButton}\r\n                {completeElementButton}\r\n                {completeButton}\r\n            </Fragment >\r\n        );\r\n    };\r\n};\r\nvar formInputStyle = {\r\n    maxWidth: '200px',\r\n    maxHeight: '40px',\r\n    minWidth: '200px',\r\n    minHeight: '40px',\r\n    padding: '0px',\r\n    margin: '0px 0px 20px 0px',\r\n    fontSize: '12px',\r\n};\r\n\r\nvar formButtonStyle1 = {\r\n    maxWidth: '200px',\r\n    maxHeight: '150px',\r\n    minWidth: '200px',\r\n    minHeight: '40px',\r\n    padding: '0px',\r\n    margin: '0px',\r\n    fontFamily: \"Computer Modern TypeWriter\",\r\n    fontSize: '15px',\r\n    fontWeight: 750,\r\n    backgroundColor: '#5d6997',\r\n    color: \"whitesmoke\",\r\n};\r\nvar formButtonStyle2 = {\r\n    maxWidth: '200px',\r\n    maxHeight: '150px',\r\n    minWidth: '200px',\r\n    minHeight: '40px',\r\n    padding: '0px',\r\n    margin: '0px',\r\n    fontFamily: \"Computer Modern TypeWriter\",\r\n    fontSize: '15px',\r\n    fontWeight: 750,\r\n    backgroundColor: '#4f5980',\r\n    color: \"whitesmoke\",\r\n};\r\n\r\nvar formButtonStyle3 = {\r\n    maxWidth: '200px',\r\n    maxHeight: '150px',\r\n    minWidth: '200px',\r\n    minHeight: '40px',\r\n    padding: '0px',\r\n    margin: '0px',\r\n    fontFamily: \"Computer Modern TypeWriter\",\r\n    fontSize: '15px',\r\n    fontWeight: 750,\r\n    backgroundColor: '#444C6D',\r\n    color: \"whitesmoke\",\r\n};\r\n","import React, { Component } from 'react';\r\nimport BuildDiagram from './BuildDiagram';\r\nimport Button from '@material-ui/core/Button';\r\nimport ManualFormField from './ManualFormField';\r\nimport imgUrl from '../images/bg-pattern.jpg';\r\n\r\nexport default class GetManualData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputFor: \"\",\r\n            currentValue: \"\",\r\n            previousValue: \"\",\r\n            isCreating: false,\r\n            branches: []\r\n        };\r\n        this.keyPress = this.keyPress.bind(this);\r\n    };\r\n\r\n    completeElement = () => {\r\n        this.setState({ inputFor: \"Enter Branch\" });\r\n    };\r\n\r\n    addTitle = () => {\r\n        this.setState({ inputFor: \"Title (optional)\" });\r\n    }\r\n\r\n    handleChange = () => ({ target: { value } }) => {\r\n        this.setState({\r\n            currentValue: value\r\n        });\r\n    };\r\n\r\n    getCreatedManually = () => {\r\n        this.setState(state => ({\r\n            title: \"\",\r\n            goal: \"\",\r\n            branches: [],\r\n            isCreating: true,\r\n            inputFor: \"Enter Goal\"\r\n        }));\r\n    };\r\n\r\n    keyPress(e) {\r\n        if (e.keyCode === 13) {\r\n            console.log('value', e.target.value);\r\n            this.getInput(this.state.inputFor);\r\n        };\r\n    };\r\n\r\n    getInput = name => {\r\n        const { currentValue, branches } = this.state\r\n        if (currentValue === \"\" && name !== \"Title (optional)\") {\r\n            alert(\"Empty input isn't allowed\")\r\n        } else {\r\n            if (name === \"Enter Goal\") {\r\n                this.setState({\r\n                    goal: currentValue,\r\n                    currentValue: \"\",\r\n                    inputFor: \"Enter Branch\",\r\n                })\r\n            } else if (name === \"Enter Branch\") {\r\n                this.setState(prevState => ({\r\n                    branches: [...prevState.branches, { name: currentValue, elements: [] }],\r\n                    branchName: currentValue,\r\n                    inputFor: \"Enter Element\",\r\n                    currentValue: \"\",\r\n                }))\r\n            } else if (name === \"Enter Element\") {\r\n                branches[branches.length - 1].elements.push(currentValue);\r\n                this.setState({\r\n                    branches: branches.map(object => {\r\n                        let newObj = {};\r\n                        newObj[\"name\"] = object.name;\r\n                        newObj[\"elements\"] = object.elements;\r\n                        return newObj;\r\n                    }),\r\n                    currentValue: \"\"\r\n                })\r\n            } else if (name === \"Title (optional)\") {\r\n                this.setState(state => ({\r\n                    title: currentValue,\r\n                    currentValue: \"\",\r\n                    inputFor: \"\",\r\n                }))\r\n            };\r\n        };\r\n    };\r\n\r\n    getBack = () => {\r\n        const { branches, inputFor, goal } = this.state;\r\n        let nextGoal = goal;\r\n        let lastBranch, poppedElement, lastBranchElements, lastBranchElementsLength, nextInputFor;\r\n        if (inputFor === \"Enter Goal\") {\r\n            this.setState({\r\n                inputFor: \"\",\r\n                currentValue: \"\",\r\n                previousValue: \"\",\r\n                isCreating: false,\r\n            })\r\n        } else if ((inputFor === \"Enter Branch\" && branches.length > 0) || inputFor === \"Title (optional)\") {\r\n            this.setState({ inputFor: \"Enter Element\" })\r\n        } else {\r\n            if (branches.length > 1) {\r\n                lastBranchElements = branches[branches.length - 1].elements;\r\n                lastBranchElementsLength = lastBranchElements.length;\r\n                if (lastBranchElementsLength > 0) {\r\n                    poppedElement = lastBranchElements[lastBranchElementsLength - 1];\r\n                    lastBranch = branches[branches.length - 1].name;\r\n                    lastBranchElements.pop();\r\n                    nextInputFor = \"Enter Element\";\r\n                } else {\r\n                    poppedElement = branches[branches.length - 1].name;\r\n                    lastBranch = branches[branches.length - 2].name;\r\n                    branches.pop();\r\n                    nextInputFor = \"Enter Branch\";\r\n                }\r\n            } else if (branches.length === 1) {\r\n                lastBranchElements = branches[branches.length - 1].elements;\r\n                lastBranchElementsLength = lastBranchElements.length;\r\n                if (lastBranchElementsLength > 0) {\r\n                    poppedElement = lastBranchElements[lastBranchElementsLength - 1];\r\n                    lastBranch = branches[branches.length - 1].name;\r\n                    lastBranchElements.pop();\r\n                    nextInputFor = \"Enter Element\";\r\n                } else {\r\n                    poppedElement = branches[branches.length - 1].name;\r\n                    lastBranch = \"\";\r\n                    branches.pop();\r\n                    nextInputFor = \"Enter Branch\";\r\n                }\r\n            } else if (branches.length === 0) {\r\n                nextGoal = \"\";\r\n                nextInputFor = \"Enter Goal\";\r\n            };\r\n            this.setState({\r\n                goal: nextGoal,\r\n                branches: branches,\r\n                currentValue: \"\",\r\n                branchName: lastBranch,\r\n                inputFor: nextInputFor,\r\n                previousValue: poppedElement\r\n            });\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { title, goal, branches, currentValue, inputFor,\r\n            isCreating, branchName, previousValue } = this.state;\r\n        let manualCreationButton, formField, buildCanvas, backButton;\r\n        if (!inputFor) {\r\n            manualCreationButton = (\r\n                <div className=\"site\">\r\n                    <Button\r\n                        variant=\"text\"\r\n                        style={formButtonStyle}\r\n                        color=\"primary\"\r\n                        onClick={() => { this.getCreatedManually() }}\r\n                    >\r\n                        get started\r\n                    </Button>\r\n                </div >\r\n            );\r\n        };\r\n\r\n        buildCanvas = <BuildDiagram\r\n            title={title}\r\n            goal={goal}\r\n            branches={branches}\r\n            previousValue={previousValue}\r\n            arrowButtonStyle={arrowButtonStyle}\r\n        />\r\n\r\n        if (isCreating && inputFor) {\r\n            backButton = (\r\n                <div className=\"site\">\r\n                    <Button\r\n                        variant=\"text\"\r\n                        style={formButtonStyle}\r\n                        color=\"primary\"\r\n                        onClick={() => { this.getBack() }}\r\n                    >\r\n                        back\r\n                    </Button>\r\n                </div>\r\n            );\r\n        };\r\n        formField = (<ManualFormField\r\n            goal={goal} branches={branches}\r\n            currentValue={currentValue}\r\n            inputFor={inputFor}\r\n            title={title}\r\n            getInput={this.getInput}\r\n            completeElement={this.completeElement}\r\n            isCreating={isCreating}\r\n            addTitle={this.addTitle}\r\n            branchName={branchName}\r\n            keyPress={this.keyPress}\r\n        />);\r\n\r\n        return (\r\n            <div\r\n                className=\"create\"\r\n                style={{\r\n                    backgroundImage: `url(${imgUrl})`,\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center center',\r\n                    backgroundRepeat: 'no-repeat',\r\n                }}>\r\n\r\n                <div className=\"create-form\">\r\n                    <div className=\"create-form-objects\" onChange={this.handleChange(inputFor)}>\r\n                        {backButton}\r\n                        {manualCreationButton}\r\n                        {formField}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"create-container\">\r\n                    {buildCanvas}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nvar formButtonStyle = {\r\n    maxWidth: '200px',\r\n    maxHeight: '150px',\r\n    minWidth: '200px',\r\n    minHeight: '40px',\r\n    padding: '0px',\r\n    margin: '0px',\r\n    fontFamily: \"Computer Modern TypeWriter\",\r\n    fontSize: '15px',\r\n    fontWeight: 750,\r\n    borderWidth: '1.6px',\r\n    backgroundColor: '#5b6692',\r\n    color: \"whitesmoke\"\r\n};\r\n\r\nconst arrowButtonStyle = {\r\n    fontSize: \"10px\",\r\n    backgroundColor: '#5b6692',\r\n    color: 'whitesmoke',\r\n    border: \"none\"\r\n};\r\n","import React, { Component, Fragment } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default class JsonFormField extends Component {\r\n    render() {\r\n        const { currentValue } = this.props;\r\n        let inputField;\r\n        inputField = (\r\n            <TextField\r\n                style={formInputStyle}\r\n                label=\"Paste JSON\"\r\n                value={currentValue}\r\n                multiline\r\n                rows={28}\r\n                variant='outlined'\r\n                autoFocus\r\n                fullWidth\r\n                margin='none'\r\n            />\r\n        );\r\n        return (\r\n            <Fragment>\r\n                {inputField}\r\n            </Fragment>\r\n        );\r\n    };\r\n};\r\nvar formInputStyle = {\r\n    fontSize: '12px',\r\n};\r\n\r\n","import React, { Component } from 'react';\r\n\r\nexport default class JsonSample extends Component {\r\n    render() {\r\n        let curlyBracketsOpen = \"{\";\r\n        let curlyBracketsClose = \"}\";\r\n        let squareBracketOpen = \"[\";\r\n        let squareBracketClose = \"]\";\r\n        let colon = \":\";\r\n        let comma = \",\";\r\n        let quotes = '\"';\r\n        let tab = <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>;\r\n        return (\r\n            <div className=\"json-sample\" >\r\n                <h4 style={{ color: \"#52504f\" }}>JSON format</h4>\r\n                <div className=\"inner\">\r\n\r\n                    <p className=\"json-sample-p\"><span className=\"json-sample-curly-brackets\">{curlyBracketsOpen}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}<span className=\"json-sample-punctuation-marks\">{quotes}</span>goal<span className=\"json-sample-punctuation-marks\">{quotes}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{colon}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{quotes}</span><span className=\"json-sample-span\">your goal</span><span className=\"json-sample-punctuation-marks\">{quotes}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{comma}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}<span className=\"json-sample-punctuation-marks\">{quotes}</span>title<span className=\"json-sample-punctuation-marks\">{quotes}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{colon}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{quotes}</span><span className=\"json-sample-span\">your title</span><span className=\"json-sample-punctuation-marks\">{quotes}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{comma}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}<span className=\"json-sample-punctuation-marks\">{quotes}</span>branches<span className=\"json-sample-punctuation-marks\">{quotes}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{colon}</span>&nbsp;<span className=\"json-sample-square-brackets\">{squareBracketOpen}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}{tab}<span className=\"json-sample-curly-brackets\">{curlyBracketsOpen}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}{tab}{tab}<span className=\"json-sample-punctuation-marks\">{quotes}</span>name<span className=\"json-sample-punctuation-marks\">{quotes}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{colon}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{quotes}</span><span className=\"json-sample-span\">branch#1 name</span><span className=\"json-sample-punctuation-marks\">{quotes}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{comma}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}{tab}{tab}<span className=\"json-sample-punctuation-marks\">{quotes}</span>elements<span className=\"json-sample-punctuation-marks\">{quotes}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{colon}</span>&nbsp;<span className=\"json-sample-square-brackets\">{squareBracketOpen}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}{tab}{tab}{tab}<span className=\"json-sample-punctuation-marks\">{quotes}</span><span className=\"json-sample-span\">element#1 name</span><span className=\"json-sample-punctuation-marks\">{quotes}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{comma}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}{tab}{tab}{tab}<span className=\"json-sample-punctuation-marks\">{quotes}</span><span className=\"json-sample-span\">element#2 name</span><span className=\"json-sample-punctuation-marks\">{quotes}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{comma}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}{tab}{tab}{tab}<span className=\"json-sample-punctuation-marks\">{quotes}</span><span className=\"json-sample-span\">element#3 name</span><span className=\"json-sample-punctuation-marks\">{quotes}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}{tab}{tab}<span className=\"json-sample-square-brackets\">{squareBracketClose}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}{tab}<span className=\"json-sample-curly-brackets\">{curlyBracketsClose}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{comma}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}{tab}<span className=\"json-sample-curly-brackets\">{curlyBracketsOpen}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}{tab}{tab}<span className=\"json-sample-punctuation-marks\">{quotes}</span>name<span className=\"json-sample-punctuation-marks\">{quotes}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{colon}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{quotes}</span><span className=\"json-sample-span\">branch#2 name</span><span className=\"json-sample-punctuation-marks\">{quotes}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{comma}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}{tab}{tab}<span className=\"json-sample-punctuation-marks\">{quotes}</span>elements<span className=\"json-sample-punctuation-marks\">{quotes}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{colon}</span>&nbsp;<span className=\"json-sample-square-brackets\">{squareBracketOpen}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}{tab}{tab}{tab}<span className=\"json-sample-punctuation-marks\">{quotes}</span><span className=\"json-sample-span\">element#1 name</span><span className=\"json-sample-punctuation-marks\">{quotes}</span>&nbsp;<span className=\"json-sample-punctuation-marks\">{comma}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}{tab}{tab}{tab}<span className=\"json-sample-punctuation-marks\">{quotes}</span><span className=\"json-sample-span\">element#2 name</span><span className=\"json-sample-punctuation-marks\">{quotes}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}{tab}{tab}<span className=\"json-sample-square-brackets\">{squareBracketClose}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}{tab}<span className=\"json-sample-curly-brackets\">{curlyBracketsClose}</span></p>\r\n                    <p className=\"json-sample-p\">{tab}<span className=\"json-sample-square-brackets\">{squareBracketClose}</span></p>\r\n                    <p className=\"json-sample-p\"><span className=\"json-sample-curly-brackets\">{curlyBracketsClose}</span></p>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    };\r\n};\r\n\r\n","import React, { Component } from \"react\";\r\nimport JsonSample from './JsonSample';\r\n\r\n\r\nexport default class PopUp extends Component {\r\n    handleClick = () => {\r\n        this.props.getFormatSample();\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"modal\">\r\n                <div className=\"modal_content\">\r\n                    <span className=\"close\" onClick={this.handleClick}>&times;    </span>\r\n                    <JsonSample />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport BuildDiagram from './BuildDiagram';\r\nimport JsonFormField from './JsonFormField';\r\nimport imgUrl from '../images/bg-pattern.jpg';\r\nimport PopUp from \"./PopUp\";\r\n\r\nexport default class GetJsonData extends Component {\r\n    state = {\r\n        currentValue: \"\",\r\n        goal: \"\",\r\n        title: \"\",\r\n        branches: [],\r\n        errorMessage: \"\",\r\n        warningMessage: [],\r\n        isSampleOpened: false\r\n    };\r\n\r\n    handleChange = () => ({ target: { value } }) => {\r\n        console.log(value, \"<--\")\r\n        this.setState({\r\n            currentValue: value\r\n        });\r\n    };\r\n\r\n    checkPropertyNames(obj) {\r\n        let warningMessage;\r\n        let warningText = \"Check JSON 'branches' child property names\";\r\n        let arr = obj.branches ? obj.branches : [];\r\n        let goal = \"\";\r\n        let title = \"\";\r\n        let branches = [];\r\n        let warningsQty = 0;\r\n        let criticalWarnings = \"\";\r\n        let newArr = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n            let item = arr[i];\r\n            let count = 0;\r\n            if (!item.hasOwnProperty(\"name\")) {\r\n                warningsQty++;\r\n                count++;\r\n            };\r\n            if (!item.hasOwnProperty(\"elements\")) {\r\n                warningsQty++;\r\n                count++;\r\n            };\r\n            if (count === 0) {\r\n                newArr.push(item);\r\n            };\r\n        }\r\n        if (!obj.hasOwnProperty(\"title\")) {\r\n            warningsQty++;\r\n        } else {\r\n            title = obj.title;\r\n        };\r\n        if (!obj.hasOwnProperty(\"goal\")) {\r\n            criticalWarnings = \"Check JSON property name 'goal'\";\r\n        } else {\r\n            goal = obj.goal;\r\n        };\r\n        if (!obj.hasOwnProperty(\"branches\")) {\r\n            if (criticalWarnings) {\r\n                criticalWarnings = \"Check JSON property names: 'goal', 'branches'\";\r\n            } else {\r\n                criticalWarnings = \"Check JSON property name 'branches'\";\r\n            };\r\n        } else {\r\n            branches = newArr;\r\n        }\r\n        if (criticalWarnings) {\r\n            warningMessage = criticalWarnings;\r\n        } else if (warningsQty > 0) {\r\n            warningMessage = `${warningText} (${warningsQty})`;\r\n        }\r\n        return {\r\n            warningMessage: warningMessage,\r\n            checkedBranchesArr: branches,\r\n            title: title,\r\n            goal: goal\r\n        };\r\n    };\r\n\r\n    settingData(value) {\r\n        if (!value) {\r\n            this.setState({\r\n                errorMessage: \"\"\r\n            });\r\n        } else {\r\n            const [err, result] = this.safeJsonParse(value);\r\n            if (err) {\r\n                this.setState({\r\n                    errorMessage: `JSON isn't completed. ${err.message}.`,\r\n                    goal: \"\",\r\n                    branches: [],\r\n                    title: \"\",\r\n                });\r\n            } else {\r\n                let checkedPropertyNames = this.checkPropertyNames(result);\r\n                const { warningMessage, goal, title, checkedBranchesArr } = checkedPropertyNames;\r\n                this.setState({\r\n                    warningMessage: warningMessage,\r\n                    errorMessage: \"\",\r\n                    goal: goal,\r\n                    branches: checkedBranchesArr.map(object => {\r\n                        let newObj = {};\r\n                        newObj[\"name\"] = object.name;\r\n                        newObj[\"elements\"] = object.elements;\r\n                        return newObj;\r\n                    }),\r\n                    title: title,\r\n                });\r\n            };\r\n        };\r\n    };\r\n\r\n    safeJsonParse = (str) => {\r\n        try {\r\n            return [null, JSON.parse(str)];\r\n        } catch (err) {\r\n            return [err];\r\n        };\r\n    };\r\n\r\n    getFormatSample = () => {\r\n        this.setState(state => ({\r\n            isSampleOpened: !state.isSampleOpened\r\n        }));\r\n    };\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.currentValue !== prevState.currentValue ||\r\n            this.state.goal !== prevState.goal ||\r\n            this.state.title !== prevState.title ||\r\n            this.state.errorMessage !== prevState.errorMessage\r\n        ) {\r\n            this.settingData(this.state.currentValue);\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { currentValue, goal, title, branches, errorMessage, warningMessage, isSampleOpened } = this.state;\r\n        let formField, displayDiagram;\r\n        formField = (<\r\n            JsonFormField\r\n            currentValue={currentValue}\r\n        />);\r\n        if (goal) {\r\n            displayDiagram = <BuildDiagram\r\n                goal={goal}\r\n                title={title}\r\n                branches={branches}\r\n                arrowButtonStyle={arrowButtonStyle}\r\n            />;\r\n        };\r\n        return (\r\n            <div\r\n                className=\"json\"\r\n                style={{\r\n                    backgroundImage: `url(${imgUrl})`,\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center center',\r\n                    backgroundRepeat: 'repeat',\r\n                }}>\r\n\r\n                <div className=\"json-form\" onChange={this.handleChange()}>\r\n                    <div>\r\n                        <Button variant=\"contained\" style={jsonFormatButtonStyle} color=\"primary\" onClick={() => { this.getFormatSample() }}>\r\n                            {isSampleOpened ? 'hide JSON format' : 'see JSON format'}\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"json-form-input\">\r\n                        {formField}\r\n                    </div>\r\n                </div>\r\n                <div className=\"json-container\">\r\n                    {this.state.isSampleOpened ? <PopUp getFormatSample={this.getFormatSample} /> : null}\r\n                    <div className=\"json-error\">\r\n                        {errorMessage}\r\n                        &nbsp;\r\n                        {warningMessage}\r\n                    </div>\r\n                    {displayDiagram}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\nconst arrowButtonStyle = {\r\n    fontSize: \"10px\",\r\n    backgroundColor: \"#5b6692\",\r\n    color: \"whitesmoke\",\r\n    border: \"none\",\r\n};\r\nvar jsonFormatButtonStyle = {\r\n    backgroundColor: '#5b6692',\r\n    padding: 0,\r\n    width: '100%',\r\n    height: '35px',\r\n    marginBottom: \"0.5em\",\r\n    fontFamily: \"Computer Modern TypeWriter\",\r\n    fontSize: '15px',\r\n    fontWeight: 750,\r\n    color: \"whitesmoke\"\r\n};\r\n","import React, { Component } from 'react';\nimport ButtonAppBar from './components/MenuButton';\nimport FooterBar from './components/FooterBar';\nimport Home from './components/Home';\nimport GetManualData from './components/GetManualData';\nimport GetJsonData from './components/GetJsonData';\nimport './styling.css';\n\nexport default class App extends Component {\n\n  state = {\n    page: \"home\"\n  };\n\n  setPage = (page) => {\n    this.setState({ page: page })\n  };\n\n  render() {\n    const { page } = this.state;\n    let pageName;\n    if (page === \"home\") {\n      pageName = <Home setPage={this.setPage} />\n    } else if (page === \"manual\") {\n      pageName = <GetManualData />\n    } else if (page === \"json\") {\n      pageName = <GetJsonData />\n    };\n\n    return (\n      <div className=\"app\">\n        <ButtonAppBar toggleMenu={this.toggleMenu}\n          setPage={this.setPage}\n        />\n        <div className=\"app-container\">\n          {pageName}\n        </div>\n        <FooterBar />\n      </div >\n    );\n  };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}